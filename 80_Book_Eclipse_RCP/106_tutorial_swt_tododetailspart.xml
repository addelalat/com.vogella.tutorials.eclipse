<chapter>
== 
		Exercise: Implement a UI for TodoDetailsPart
	

	<section>
=== TodoDetailsPart
		
			Change the
			`TodoDetailsPart`
			class
			so that you create a user interface similar to the following.
			Use a
			`DateTime`
			widget for the "Due Date" selection.
		
		
image::tododetails-userinterface.png"
						scale="50[Creating a Todo user interface,pdfwidth=60%]
		
		
			See
			<xref linkend="swt_tododetailspart_solution" />
			for the complete example coding.
		

	
	<section>
=== Implement focus setting for one of your widgets
		
			Ensure that your @Focus method sets the focus to one of the
			SWT
			widgets.
			This is an optional step but it is a
			good practice to put the
			focus explicitly on one SWT widget.
		


		
			The following code shows an example implementation of this
			method.
		

		
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/focus/onFocus.java" />
			</programlisting>
		

		<note>
			
				If you forget to put focus on an SWT widget in your method annotated
				with
				`@Focus`
				the framework call this method twice in certain situations. This
				is
				done by the Eclipse
				framework to ensure consistency within the
				framework. If you correct
				places the focus on one SWT widget, the
				method is only called once
				if the part is activated by the user.
			
		</note>

		
			Ensure that you also put the focus on an SWT widget in your
			`TodoOverviewPart`
			class.
		

	



=== Example code for TodoDetailsPart
		The following listing contains a possible implementation of this
			exercise as reference for the reader.
		
		
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/swt/TodoDetailsPart_SWT.java" />
			</programlisting>
		



	
</chapter>