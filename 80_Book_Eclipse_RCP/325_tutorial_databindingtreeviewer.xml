<chapter id="tutorial_databindingtreeviewer_exercise">
== Exercise: Data Binding for the tree viewers

=== Implement data binding for the tree viewer of your tags
		
			Change your implementation of the
			`TagOverviewPart`
			to use data binding.
		
		The following code demonstrates this implementation.
		
		TIP:
			
				The following code
				snippet only contains the data binding
				relevant part of the code. If you did any of the optional exercises
				your
				implementation
				may
				also
				include a search
				box, the registration of
				the
				popup menu, a filter or more.
			
		</tip>
		
			Before changing the actual
			`TagOverviewPart`
			is changed some helper classes are necessary to let the databinding
			work properly.
		
		
			The
			`ObservableListTreeContentProvider`
			, which will be used as
			`ContentProvider`
			for the TreeViewer must be able to figure out, where to find the
			children of a given input. Therefore a
			`DelegatingListProperty`
			subclass, which is passed to the
			`ObservableListTreeContentProvider`
			, is created.
		
		
[source,java]
----
include::res/databinding/TagTreeListProperty.java[]
----
		
		
			To keep track on changes, which are rendered by a
			`TreeViewerColumns`
			`CellLabelProvider`
			, a subclass of the
			`ObservableMapCellLabelProvider`
			is created.
		
		
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text"
					href="../examples/databinding/DelegatingObservableCellLabelProvider.java[]
----
		
		
			To provide the right values for the different model elements
			`Tag`
			and
			`Todo`
			the
			`DelegatingObservableCellLabelProvider`
			needs to have the right
			`IValueProperty`
			in order to get the values to be displayed.
		
		
			After the helper classes are created the
			`TagOverviewPart`
			can be changed accordingly.
		
		
[source,java]
----
include::res/databinding/DelegatingLabelProperty.java[]
----
		
		
[source,java]
----
include::res/databinding/DelegatingDescriptionProperty.java[]
----
		
		
[source,java]
----
include::res/databinding/TagOverviewPart.java[]
----
		
	


=== Validating
		
			Start your application and ensure that the data is displayed
			correctly in the tree.
		
		NOTE:
			
				Currently the selection of the tree is not sent to the
				TodoDetailsPart. This will be implemented in
				<xref linkend="tutorial_usingeselectionservice" />
				.
			
		</note>
	

</chapter>
