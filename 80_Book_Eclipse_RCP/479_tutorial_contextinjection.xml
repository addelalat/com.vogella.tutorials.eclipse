<chapter id="exercise_contextinjection">
== Optional exercise: Dependency injection for your objects

=== Target of this exercise

		 The following demonstrates the usage of dependency injection
			framework of Eclipse
			for creating objects.
		
		
			In this exercise you create an instance of the
			`TodoWizard`
			via the
			`ContextInjectionFactory.make()`
			method.
		
	

=== Prepare the wizard classes for dependency injection 
		
			Add the
			`@Inject`
			annotation to the constructor of your
			`TodoWizardPage1`
			class.
		
		
[source,java]
----
include::res/wizardcreatedwithdependencyinjection/TodoWizardPage1.java[]
----
		


		
			Add the
			`@Inject`
			annotation to the constructor of your wizard and to the two fields
			for the wizard pages.
		

		
[source,java]
----
include::res/wizardcreatedwithdependencyinjection/TodoWizard.java[]
----
		
	

=== Create the wizard via dependency injection 
		
			In your handle which opens the wizard get the
			`IEclipseContext`
			injected and
			create a new
			`IEclipseContext`
			with the
			`createChild()`
			method.
		
		
			Create a new Todo via the
			`new()`
			Operator.
			Add the new
			`Todo`
			to your local context under the
			`Todo.class`
			key.
		

		
			Also create the two wizard pages and add them to the created
			IEclipseContext. Afterwards created the wizard via the
			`ContextInjectionFactory`
			class as demonstrated by the following code.
		
		
[source,java]
----
include::res/wizardcreatedwithdependencyinjection/NewTodoHandler.java[]
----
		



	
</chapter>