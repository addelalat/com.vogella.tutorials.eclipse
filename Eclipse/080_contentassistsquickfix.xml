
	<title>Content Assist and Quick Fix
[[contentassist">
=== Content assist
		<indexterm>
			<primary>Content assist</primary>
		</indexterm>
		
			_Content assist_
			is a functionality in Eclipse which allows the developer to get
			context-sensitive code
			completion in an editor upon user request.
		
		
			It can
			be invoked by pressing
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>Space</keycap>
			</keycombo>
			.
		
		
			For example, type
			<code>syso</code>
			in the editor of a Java source file
			and
			then press
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>Space</keycap>
			</keycombo>
			. This will replace
			<code>syso</code>
			with
			<code>System.out.println("")</code>
			.
		
		
			If you have a reference to an object, for example, the object
			<code>person</code>
			of the type
			<code>Person</code>
			and
			need to see its
			methods, type
			<code>person.</code>
			and
			press
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>Space</keycap>
			</keycombo>
			.
		
		
image::contentassists10.gif" />
				</imageobject>
				<textobject>
					<phrase>Content Assists,pdfwidth=60%]
		
	
[[quickfix">
=== Quick Fix
		<indexterm>
			<primary>Quick Fix</primary>
		</indexterm>
		
			Whenever Eclipse detects a problem, it will underline the
			problematic
			text in the editor. Select the underlined text and press

			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>1</keycap>
			</keycombo>
			to see proposals how to solve this problem. This functionality is
			called
			_Quick Fix_
			.
		
		
			For example, type
			<code>myBoolean = true;</code>
			If myBoolean is not yet
			defined, Eclipse will highlight it as an
			error. Select the variable
			and press
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>1</keycap>
			</keycombo>.
			Eclipse will
			suggest creating a field or
			local variable.
		

		
			<mediaobject>
				<imageobject>
					<imagedata scale="60" fileref="images/quickfix10.png" />
				</imageobject>
				<textobject>
					<phrase>Using Quickfix Example,pdfwidth=60%]
		

		
			_Quick Fix_
			is extremely powerful. For example, it allows you to
			create new
			local
			variables and fields as well as new methods and new
			classes. Or it
			can
			put
			<code>try/catch</code> statements
			around your exceptions. It
			can also
			assign a
			statement
			to a variable and much more.
		
		
			_Quick Fix_
			also gives several options for code changes on code which does not
			contain errors, e.g., it allows you to convert a local variable to a
			field.
		

	

