
== Generating code

	
		Eclipse has several possibilities to generate code for you. This
		can save significant time during development.

	
	
		For example, Eclipse can override methods from superclasses and
		generate the
		`toString()`
		,
		`hashcode()`
		and
		`equals()`
		methods. It
		can also generate getter and setter methods for attributes
		of
		your Java class.
	
	 You can find these options in the Source menu.
	
		<mediaobject>
			<imageobject>
				<imagedata scale="60" fileref="images/generate10.png" />
			</imageobject>
			<textobject>
				<phrase>Code generation</phrase>
			</textobject>
		</mediaobject>
	
	
		To test the source generation, create the following class in your
		`de.vogella.eclipse.ide.first`
		project.
	
	
		<programlisting>
			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
				parse="text" href="../examples/codegen/Person.java" />
		</programlisting>
	

	
		Select
		menu:
			<guimenu>Source</guimenu>
			<guisubmenu>Generate Constructor using Fields...</guisubmenu>
		</menuchoice>
		, mark both fields and click the
		_OK_
		button.
	
	
		<mediaobject>
			<imageobject>
				<imagedata scale="60" fileref="images/sourcegenerator10.png" />
			</imageobject>
			<textobject>
				<phrase>Generating</phrase>
			</textobject>
		</mediaobject>
	
	
		Select
		menu:
			<guimenu>Source</guimenu>
			<guisubmenu>Generate Getter and Setter...</guisubmenu>
		</menuchoice>
		, select all fields and afterwards click the
		_OK_
		button.
	
	
		Select
		menu:
			<guimenu>Source</guimenu>
			<guisubmenu>Generate toString()...</guisubmenu>
		</menuchoice>
		, mark again all fields and click the
		_OK_
		button.

	

	 You created the following class:
	
		<programlisting>
			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
				parse="text" href="../examples/codegen/Person2.java" />
		</programlisting>
	

