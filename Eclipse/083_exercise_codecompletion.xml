
	<title>Exercise: code generation and content assists
[[rssfeedreaders_intro">
=== Introduction
		
			In this exercise you practice the usage of code generation and
			the
			usage of the
			_Content Assists_
			functionality.
		
	
[[rssfeedreaders_project">
=== Create project

		
			Create a project called
			<code>com.vogella.ide.todo</code>
			.
		
	

[[rssfeedreaders_objectxmlparserlistview">
=== Create class
		
			Create the
			<code>com.vogella.ide.todo</code>
			package
			and the
			following class.
		
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/net/TodoBase.java" />
			</programlisting>
		

		
			Select
			menu:Source[Generate Constructor using Fields...]
			to generate a constructor using all fields.
		
		
			Use the
			menu:Source[Generate Getter and Setter]
			to create getters and setters for all fields.
		
		The resulting class should look like the following listing.
		
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/net/Todo.java" />
			</programlisting>
		
		
			Use Eclipse to generate a
			<code>toString()</code>
			method for the
			<code>Todo</code>
			class based on the
			<parameter>id</parameter>
			and
			<parameter>summary</parameter>
			field.

			This can be done via the Eclipse menu
			menu:Source[Generate toString()...]
			.

		
		
			Also
			use Eclipse to generate a
			<code>hashCode()</code>
			and
			<code>equals()</code>
			method based on the
			<parameter>id</parameter>
			field. This can be done via the
			Eclipse menu
			menu:Source[Generate hashCode() and equals()...]
			.
		
	

[[rssfeedreaders_example">
=== Create instances
		
			Create a new class called
			<code>TodoProvider</code>
			.
			Create the following static method in your
			<code>TodoProvider</code>
			class.
		
		
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/net/TodoProvider.java" />
			</programlisting>
		
	
[[rssfeedreaders_validate">
=== Write a test class
		
			Write another
			<code>TodoProviderTest</code>
			class
			with a
			<code>public static void main (String[] args)</code>
			method.
		
		
			In your main method call the
			<code>createInitialModel</code>
			method and validate that the returned number of
			items is 5.
		
		
			If another number than 5 is returned, throw a
			<code>RuntimeException</code>
			. If the correct number is returned, write the String "Correct" to
			the
			_Console_
			view
			.
		
		
			Use
			_Content assist_
			to create the
			<code>System.out.println()</code>
			based on
			<code>syso</code>
			for you.
		

		
image::contentassists10.png[Content Assists Input,pdfwidth=60%]
		
		
image::contentassists20.png[Content Assists Result,pdfwidth=60%]
		
	


[[rssfeedreaders_potentialsolution">
=== Example implementation of TodoProviderTest
		While this exercise was about code generation and content
			assits,
			you might be interested in a potential solution for this exercise. The
			following listing contains a potential solution.
		
		
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/net/TodoProviderTest.java" />
			</programlisting>
		
	

