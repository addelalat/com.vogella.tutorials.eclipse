
== Refactoring

=== Refactoring
		
		
			_Refactoring_
			is the process of restructuring the code without
			changing its
			behavior. For example, renaming a Java class or method is
			a refactoring
			activity.
		
	

=== Refactoring in Eclipse
		
			Eclipse supports several refactoring activities, for example,
			renaming
			or
			moving.
		

		
			For example, to use the
			_Rename_
			refactoring, you can right-click on your class (in the editor or
			Package Explorer) and
			select
			menu:Refactor[Rename]
			to rename your class. Eclipse will make sure that all calls
			in your
			Workspace to
			your class or method are renamed.
		

		
			The following screenshot shows how to call the
			_Rename_
			refactoring for a class. The cursor is positioned on the class and
			the context menu is activated via a right-click on the class.
		
		
			<mediaobject>
				<imageobject>
					<imagedata scale="60" fileref="images/refactor10.png[Renaming a class,pdfwidth=60%]
		

		
			The most important refactorings are listed in the following
			table.
			<table frame='all'>
		=== Refactoring
				<tgroup cols='2' align='left' colsep='1' rowsep='1'>
					<colspec colname='c1' colwidth="1*" />
					<colspec colname='c2' colwidth="3*" />
					<thead>
						<row>
							<entry>Refactoring</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>Rename</entry>
							<entry>Rename a variable or class</entry>
						</row>
						<row>
							<entry>Extract Method</entry>
							<entry>Creates a method based on the selected code in the editor
							</entry>
						</row>
						<row>
							<entry>Extract Constant</entry>
							<entry>Gives magic numbers or hard-coded strings a descriptive constant name and replaces all occurences.</entry>
						</row>
					</tbody>
				</tgroup>
			</table>

		
		<tip>
			
				Lots of refactorings are also available via the
				<keycombo>
					<keycap>Ctrl</keycap>
					<keycap>1</keycap>
				</keycombo>
				shortcut (
				_quick fix_
				). Select a certain part of your code and press
				<keycombo>
					<keycap>Ctrl</keycap>
					<keycap>1</keycap>
				</keycombo>
				to see possible refactorings for the selected
				position.
			
		</tip>
		 Eclipse has many more refactorings. The available options
			depend on the selection in the Java editor. In most cases you should
			get
			an idea of the performed action by the naming of the refactoring
			operation.
		

	


