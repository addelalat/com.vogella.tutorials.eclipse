<section id="sourcenavigationexplorer" role="wrapper">
	<title>Source navigation in the Eclipse IDE</title>
	<section id="sourcenavigation_packageexplorer">
		<title>Package Explorer or Project Explorer</title>
		<indexterm>
			<primary>Package Explorer view</primary>
			<secondary>navigation
			</secondary>
		</indexterm>
		<indexterm>
			<primary>Package Explorer view</primary>
			<secondary>filter resources
			</secondary>
		</indexterm>
		<para>
			The primary way of navigating through your project is the
			<guilabel>Package Explorer</guilabel>
			or alternatively the
			<guilabel>Project Explorer</guilabel>
			view. You can open nodes in the tree and open a file in an editor
			by
			double-clicking on the corresponding entry in the
			tree hierarchy.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/packageexplorer10_display.png" scale="40" />
				</imageobject>
				<textobject>
					<phrase>Package Explorer display</phrase>
				</textobject>
			</mediaobject>
		</para>

		<para>
			The drop-down menu in the
			<guilabel>Package Explorer</guilabel>
			allows you to filter
			the resources which should be displayed or
			hidden.
		</para>

		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/packageexplorer20_filter.png" scale="40" />
				</imageobject>
				<textobject>
					<phrase>Filter in the package explorer</phrase>
				</textobject>
			</mediaobject>
		</para>

		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/packageexplorer22_filter.png" scale="40" />
				</imageobject>
				<textobject>
					<phrase>Filter in the package explorer</phrase>
				</textobject>
			</mediaobject>
		</para>

	</section>

	<section id="packageexplorerlinkwitheditor">
		<title>Link Package Explorer with editor</title>
		<indexterm>
			<primary>Package Explorer view</primary>
			<secondary>link with active editor
			</secondary>
		</indexterm>
		<para>
			The
			<guilabel>Package Explorer</guilabel>
			view
			allows you to display the associated file from
			the
			currently selected
			editor. For example, if you are working on the
			<code>Foo.java</code>
			file in the Java
			<wordasword>editor</wordasword>
			and
			switch to the Java
			<wordasword>editor</wordasword>
			of the
			<code>Var.java</code>
			file,
			then the corresponding file will be selected in
			the
			<guilabel>Package Explorer</guilabel>
			view.
		</para>

		<para>
			To activate this behavior, press the
			<guibutton>Link with Editor</guibutton>
			button in
			the
			<guilabel>Package
				explorer
			</guilabel>
			view
			as depicted in the following screenshot.
		</para>

		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/editorsyncpackage10.png" scale="40" />
				</imageobject>
				<textobject>
					<phrase>Synchronize the package explorer selectioni with the
						current selected
						editor
					</phrase>
				</textobject>
			</mediaobject>
		</para>
	</section>



	<section id="classnavigation">
		<title>Opening a class</title>
		<para>
			You can navigate between the classes in your project via the
			<guilabel>Package
				Explorer
			</guilabel>
			view
			as described before. You can navigate the tree and open a file via
			a double-click.
		</para>
		<para>
			In addition, you can open any class by positioning the cursor
			on
			the
			class
			in
			an editor and pressing
			<keycombo>
				<keycap>F3</keycap>
			</keycombo>
			. Alternatively, you can
			press
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>Shift</keycap>
				<keycap>T</keycap>
			</keycombo>
			. This shows the following dialog in which you can enter the
			class name
			to open
			it.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/classopen10.png" />
				</imageobject>
				<textobject>
					<phrase>Opening a class</phrase>

				</textobject>
			</mediaobject>
		</para>
		<para>
			You can also search for package names. Each part of the package name
			must end with a
			<parameter>.</parameter>
			(the
			<wordasword>dot</wordasword>
			character)
			so that the
			<wordasword>Open Type Dialog</wordasword>
			can identify it as a package.
		</para>
		<tip>
			<para>
				You only need to specify part of each
				segment of the package name.
				Assume, for example, that you search for
				the
				<parameter>org.eclipse.swt.widgets.Button</parameter>
				class. To
				find this class, you can use the search term
				<parameter>org.eclipse.swt.widgets.Button</parameter>
				or
				<parameter>o.e.s.w.Button</parameter>
				or
				<parameter>o.Button</parameter>
				.
			</para>
		</tip>

		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/classopen20.png" />
				</imageobject>
				<textobject>
					<phrase>Opening a class with package name</phrase>
				</textobject>
			</mediaobject>
		</para>
		<para>
			The
			<wordasword>Open Type Dialog</wordasword>
			also supports
			<wordasword>CamelCase</wordasword>
			like
			search, e.g., it matches capital letters in the class name. For
			example, if you would search for the
			<code>OnTouchListener</code>
			class you could use
			<parameter>OTL</parameter>
			or
			<parameter>OToList</parameter>
			as search term.
		</para>

		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/classopen30.png" />
				</imageobject>
				<textobject>
					<phrase>Opening a class with CamelCase</phrase>
				</textobject>
			</mediaobject>
		</para>
		<tip>
			<para>
				To avoid suffix matching, you can add a space after the class name.
				For
				example, you can type
				<parameter>Selection</parameter>
				(there is a space after selection) to match the
				<code>Selection</code>
				class but not the
				<code>SelectionListener</code>
				class. Wildcards like * are also supported.
			</para>
		</tip>
	</section>
	<section id="resourcenavigation_openresourcedialog">
		<title>Open Resource dialog to open arbitrary files</title>
		<indexterm>
			<primary>Resource</primary>
			<secondary>opening dialog
			</secondary>
		</indexterm>
		<indexterm>
			<primary>Open Resource dialog</primary>
		</indexterm>
		<para>
			You can open any file from your open projects via the
			<wordasword>Open Resource</wordasword>
			dialog. You can open this dialog via the
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>Shift</keycap>
				<keycap>R</keycap>
			</keycombo>
			shortcut. This dialog allows to enter the file name
			and to open or show it in a selected view. The following
			screenshot demonstrate the usage to open a pom.xml file from your workspace.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/openresourceeclipse10.png" scale="40" />
				</imageobject>
				<textobject>
					<phrase>Open resources in Eclipse</phrase>
				</textobject>
			</mediaobject>
		</para>

	</section>

	<section id="sourcenavigation_quickoutline">
		<title>Quick Outline</title>
		<indexterm>
			<primary>Quick Outline</primary>
		</indexterm>
		<para>
			<guilabel>Quick Outline</guilabel>
			shows you an structured overview of the file you are editing.
			For example, for a Java class you see its methods with
			the
			option
			to filter.
			The shortcut for opening the
			<guilabel>Quick Outline</guilabel>
			is
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>O</keycap>
			</keycombo>
			. You can also reach this option, via right-click in an editor via the
			<guilabel>Quick Outline</guilabel>
			option.

		</para>

		<para>
			By default,
			<guilabel>Quick Outline</guilabel>
			shows only the direct members and fields of the Java class. Press
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>O</keycap>
			</keycombo>
			again to show also the inherited members and fields.
		</para>
		<para>
			The default look of the
			<guilabel>Quick Outline</guilabel>
			option is similar to the
			<guilabel>Quick Outline</guilabel>
			view
			of the
			<guilabel>Java</guilabel>
			<wordasword>perspective</wordasword>
			.
		</para>
	</section>
	<section id="sourcenavigation_type_hierarchy">
		<title>Open Type Hierarchy</title>
		<indexterm>
			<primary>Type Hierarchy</primary>
			<secondary>open
			</secondary>
		</indexterm>
		<para>
			The type hierarchy of a class shows you which classes it extends
			and
			which interfaces it implements. You can use
			the type hierarchy to
			navigate to one of these elements.
		</para>
		<para>
			To open the type
			hierarchy of the
			selected class, right-click
			in
			the
			editor and
			select
			<guilabel>Open Type Hierarchy</guilabel>
			(Shortcut:
			<keycombo>
				<keycap>F4</keycap>
			</keycombo>
			) or
			<guilabel>Quick Type Hierarchy</guilabel>
			(Shortcut:
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>T</keycap>
			</keycombo>
			).
		</para>
	</section>
	<section id="sourcenavigation_textsearch">
		<title>Full text search</title>
		<indexterm>
			<primary>Search dialog</primary>
		</indexterm>
		<para>
			You frequently need to find files containing certain text or other meta data. Via the
			<menuchoice>

				<guimenu>Search</guimenu>
				<guisubmenu>Search</guisubmenu>
			</menuchoice>
			menu (Shortcut:
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>H</keycap>
			</keycombo>
			) you can open the search dialog of Eclipse. Use the
			<guilabel>File Search</guilabel>
			tab to search for text with the option to use regular expressions and also to replace matching entries.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/javasearchdialog30.png" />
				</imageobject>
				<textobject>
					<phrase>Text search</phrase>
				</textobject>
			</mediaobject>
		</para>

		<para>
			Eclipse associates file extensions with the default tab. You can
			customize the available search tabs via the
			<guilabel>Customize</guilabel>
			button in the Search dialog. Via the
			<guilabel>Remember the last used page</guilabel>
			you can configure Eclipse to use your last tab as default.
		</para>


		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/customizesearch10.png" />
				</imageobject>
				<textobject>
					<phrase>Customize search</phrase>
				</textobject>
			</mediaobject>
		</para>

		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/customizesearch20.png" />
				</imageobject>
				<textobject>
					<phrase>Customize search</phrase>
				</textobject>
			</mediaobject>
		</para>

	</section>

	<section id="sourcenavigation_othersearch">
		<title>Java search and other specialized searches</title>

		<para>
			The Search functionality (
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>H</keycap>
			</keycombo>
			) others specialized searches for more complex use cases.
			For example, use the
			<guilabel>Java Search</guilabel>
			tab to search for Java elements, e.g.,
			methods.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/javasearchdialog10.png" />
				</imageobject>
				<textobject>
					<phrase>Text search</phrase>
				</textobject>
			</mediaobject>
		</para>
		<para>
			The
			<guilabel>Search</guilabel>
			view
			shows the search results for the selected scope. You can
			double-click
			on a
			search
			entry to navigate to the
			corresponding
			position in the
			editor. The currently selected search result is also indicated via an
			arrow in the left
			border of the editor.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/javasearchdialog20.png" />
				</imageobject>
				<textobject>
					<phrase>Text search</phrase>
				</textobject>
			</mediaobject>
		</para>

	</section>

	<section id="sourcenavigation_incrementalfind">
		<title>Inline search in an editor</title>
		<indexterm>
			<primary>Incremental find</primary>
		</indexterm>
		<para>
			You can use the
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>J</keycap>
			</keycombo>
			shortcut to activate
			<wordasword>Incremental Find</wordasword>
			. This allows you to search in the current active editor for a text
			which is displayed in the status line as depicted
			by the following
			screenshot. Repeat
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>J</keycap>
			</keycombo>
			in order to move to the next
			occurrence of the current search term.
		</para>

		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/incrementalsearch10.png" scale="30" />
				</imageobject>
				<textobject>
					<phrase>Incrementation search</phrase>
				</textobject>
			</mediaobject>
		</para>
		<para>The advantage of this search is that no pop-up dialog is opened
			which blocks other elements in the Eclipse IDE.
		</para>

		<para>
			If you have selected an element in the editor, you can use the
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>K</keycap>
			</keycombo>
			shortcut to search for the next occurrence of the selected text and
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>Shift</keycap>
				<keycap>K</keycap>
			</keycombo>
			for the previous element.
		</para>
	</section>
	<section id="sourcenavigation_annotations">
		<title>Annotation navigations</title>
		<para>You can also navigate via the annotation buttons, e.g., for
			jumping
			to the next error or warning in your source
			code.
		</para>

		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/navigation_annotations10.png" scale="40" />
				</imageobject>
				<textobject>
					<phrase>Annotation navigation</phrase>
				</textobject>
			</mediaobject>
		</para>
		<para>
			By pressing the buttons you can navigate to the related
			annotations.
			You can also use the keyboard shortcut
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>.</keycap>
			</keycombo>
			(Ctrl plus the dot sign)
			for selecting the next annotation or
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>,</keycap>
			</keycombo>
			(Ctrl plus the comma sign)
			for selecting the previous annotation.

		</para>
		<para>The following screenshot shows source code with two warnings
			and
			one error and you can navigate between the
			corresponding code via the
			annotation buttons.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/annotationsnavigation30.png" scale="40" />
				</imageobject>
				<textobject>
					<phrase>Moving in the source code</phrase>
				</textobject>
			</mediaobject>
		</para>
		<para>Which annotations are relevant for navigation can be configured
			via the drop-down menu of the toolbar. This
			selection is highlighted
			in the following screenshot.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/navigation_annotations20.png" scale="40" />
				</imageobject>
				<textobject>
					<phrase>Annotation navigation</phrase>
				</textobject>
			</mediaobject>
		</para>
	</section>
	<section id="sourcenavigation_mouse">
		<title>Mouse and keyboard navigation</title>
		<para>
			In a lot of cases you can also use the mouse to navigate to or
			into an
			element if you press the
			<keycombo>
				<keycap>Ctrl</keycap>
			</keycombo>
			key. For example, press the
			<keycombo>
				<keycap>Ctrl</keycap>
			</keycombo>
			key and (left) click with the mouse on the name of a class to jump
			into the class
			declaration.
		</para>
		<para>
			Similar to the left mouse click combined with the
			<keycombo>
				<keycap>Ctrl</keycap>
			</keycombo>
			,
			you can use the
			<keycombo>
				<keycap>F3</keycap>
			</keycombo>
			key to go into a class.
		</para>
	</section>
	<section id="sourcenavigation_breadcrumb">
		<title>Show in Breadcrumb</title>
		<indexterm>
			<primary>Java editor</primary>
			<secondary>breadcrumb
			</secondary>
		</indexterm>
		<indexterm>
			<primary>Breadcrumb</primary>
		</indexterm>
		<para>
			You can also activate the
			<wordasword>breadcrumb</wordasword>
			mode for the Java editor
			which allows you to navigate the source code
			directly from the Java
			editor.
		</para>
		<para>
			You can activate this mode via right-click in the editor and by
			selecting the
			<guilabel>Show in Breadcrumb</guilabel>
			entry.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/breadcrumb10.png" />
				</imageobject>
				<textobject>
					<phrase>Show in Breadcrumb</phrase>
				</textobject>
			</mediaobject>
		</para>
		<para>This allows you to navigate the source code from the editor as
			depicted in the following screenshot.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/breadcrumb20.png" />
				</imageobject>
				<textobject>
					<phrase>Breadcrumb view</phrase>
				</textobject>
			</mediaobject>
		</para>
		<para>
			To hide it again, right-click on a breadcrump entry and select
			<guilabel>Hide Breadcrumb</guilabel>
			.
		</para>

		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/breadcrumb30.png" />
				</imageobject>
				<textobject>
					<phrase>Breadcrumb view</phrase>
				</textobject>
			</mediaobject>
		</para>
	</section>
	<section id="sourcenavigation_shortcuts">
		<title>Shortcuts</title>
		<para>
			There are a lot of shortcuts available for navigation.
			Please
			check
			the appendix of this $book for these shortcuts or
			open
			<menuchoice>
				<guimenu>Window</guimenu>
				<guimenu>Preferences</guimenu>
				<guisubmenu>General</guisubmenu>
				<guisubmenu>Keys</guisubmenu>
			</menuchoice>
			to find and redefine shortcuts at
			runtime.
		</para>
	</section>

	<section id="packageexplorer_closeprojects">
		<title>Closing and opening projects</title>
		<indexterm>
			<primary>Package Explorer view</primary>
			<secondary>close projects
			</secondary>
		</indexterm>
		<indexterm>
			<primary>Package Explorer view</primary>
			<secondary>open projects
			</secondary>
		</indexterm>
		<para>
			Closing projects saves memory in Eclipse and can reduce the build
			time. Eclipse ignores closed
			projects, e.g., all
			searches ignore files from closed projects. Also the
			<guilabel>Problems</guilabel>
			view
			does only shows errors of opened projects. This typically helps you
			focus your attention on the project. You can
			close projects via a right-click on it and by selecting the
			<guilabel>Close Project</guilabel>
			menu entry.
			Alternatively, if you work on a project, you can close all
			unrelated
			projects via a right-click on it and by
			selecting the
			<guilabel>Close Unrelated Projects</guilabel>
			menu entry.
		</para>

		<para>
			To open a
			closed project double-click on it, or right-click it
			and
			select
			<guilabel>Open Project</guilabel>
			.
		</para>
		<para>
			You can
			use the filter functionality for the
			<guilabel>Package Explorer</guilabel>
			view
			to hide the closed projects.
		</para>

	</section>


</section>