
	<title>WorkbenchParts and Perspectives
[[views_overview">
=== WorkbenchParts - Views and Editors
		
			As described earlier the
			<code>WorkbenchWindow</code>
			and the
			<code>WorkbenchPage</code>
			represent the visual and inner part of the graphical user interface.

		
		
			The
			<code>WorkbenchPage</code>
			contains Parts, which can be
			_Views_
			or
			_Editors_
			.
		
		
			_Views_
			are used to display information in an RCP application; they
			can also
			be used to change data.
			_Views_
			extend the abstract class
			<code>ViewPart</code>
			.
			_Editors_
			extend the abstract
			<code>EditorPart</code>
			. Both extend
			<code>WorkbenchPart</code>
			.
		
		
			An
			<code>editor</code>
			typically requires that the user explicitly select "save" to apply
			the
			changes to the data while a view typically changes the data
			immediately.

			All editors are opened in the same area. Via the
			perspective you can
			configure if the editor area is visible or not.
		
		
			_Views_
			and
			_Editors_
			are defined via extension points in the file <filename>plugin.xml</filename> via the tab
			"Extensions".
		
		
			_Views_
			are defined via the extension point "org.eclipse.ui.views"
			and
			_Editors_
			via the extension point "org.eclipse.ui.editors".
		
		
			_Views_
			must implement the
			<code>createPartControl()</code>
			and
			<code>setFocus()</code>
			methods.
		
		

			<code>createPartControl()</code>
			is used to create the UI components of the
			<code>View</code>
			.
		
		

			
				createPartControl() will get as parameter a
				<code>Composite</code>
				which can be used to construct the user interface. This composite
				has
				by default a
				<code>FillLayout</code>
				layout manager assigned to it. This layout manager assigns the same
				space to all components
				equally.
			
			<code>setFocus()</code>
			must set the focus to a specific UI component.
		

	
[[workbenchparts_perspective">
=== Perspective
		
			A
			<code>Perspective</code>
			describes a certain configuration of
			_Views_
			and
			_Editors_
			.
		
		
			A
			<code>Perspective</code>
			is defined via "org.eclipse.ui.perspectives". The
			<code>WorkbenchParts</code>
			which are part of a
			<code>Perspective</code>
			are either defined via a Java class defined in the extension point
			"org.eclipse.ui.perspectives" or via the
			"org.eclipse.ui.perspectiveExtensions".
		
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/perspective/addView.txt" />
			</programlisting>
		
		
			<code>layout.addView()</code>
			adds a view to the perspective.

			You can also add placeholders for
			views
			via the
			<code>layout.addPlaceholder()</code>
			method call. This methods accepts wildcards and a
			<code>View</code>
			with a matching ID would open in this area. For example if you want
			to open all views in a specific place you could use the
			<code>layout.addPlaceholder("*",...)</code>
			method call, or

			<code>layout.addPlaceholder("view_id",....)</code>
			to open a View with the "view_id" ID in this placeholder.
		
		
			You can also group view via a
			<code>IFolderLayout</code>
			which can be created via
			<code>layout.createFolder()</code>
			call and by adding
			_Views_
			to this folder via the
			<code>addView(id)</code>
			method on
			<code>IFolderLayout</code>
			.
		

	

