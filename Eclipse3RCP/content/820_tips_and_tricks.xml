
	<title>Tips and Tricks
[[tips_loadimages">
=== Load an image from your plugin
		
			To load an image from your plug-in your use the
			<code>AbstractUIPlugin</code>
			.
		
		
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/loadimage/loadimageold.txt" />
			</programlisting>
		
		Alternatively you could load the framework directly. 
		
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/loadimage/loadimage.txt" />
			</programlisting>
		

	


[[tips_userlayout">
=== Save users layout
		 To remember the user's layout and window size for the next
			time
			you start your application, add
			configurer.setSaveAndRestore(true);
			to
			the initialize method of
			ApplicationWorkbenchAdvisor.
		
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text"
					href="../examples/tips/ApplicationWorkbenchAdvisorRememberValues.java" />
			</programlisting>
		
		
			Eclipse has a pre-defined command to reset the perspective. See
			<ulink
				url="http://www.vogella.com/tutorials/EclipseCommands/article.html#standardcommands">Eclipse Commands
			.
		
	

[[statusline">
=== Accessing the status line
		
			The status line in an RCP application can be used to give the
			user some information about the running application. The shared
			message area can be used by all parts of the
			application to
			write
			messages to this area. The whole RCP application has access to the
			information in the
			shared
			status line therefore the information in
			the
			shared status line
			might
			be
			overwritten.
		
		
			To show the
			status line in your RCP application use the
			"ApplicationWorkbenchWindowAdvisor" and set the status line visible
			in the
			method preWindowOpen().
		
		
			<programlisting>

				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text"
					href="../examples/statusline/ApplicationWorkbenchWindowAdvisor.java" />
			</programlisting>
		
		
			The following writes a text to the status line from a view.
		
		
			<programlisting>

				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/statusline/statuslinesettext.java" />
			</programlisting>
		
		
			From an editor you can access the status line via the
			following:
		
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/statusline/editorstatusline.java" />
			</programlisting>
		
	

[[tips_unused_dependencies">
=== Finding unused dependencies
		 In the file plugin.xml (tab dependencies) you define on which
			plugins your plug-in depends. Of course you should only define the
			required plugins here. You can check if you have any dependency
			maintained which is actually not used, by selecting Dependency
			Analysis -> Find unused dependencies.
		

		
			<mediaobject>
				<imageobject>
					<imagedata scale="60" fileref="images/unuseddependency10.gif" />
				</imageobject>
				<textobject>
					<phrase>How to remove unused dependencies,pdfwidth=60%]
		
	
[[tips_multiuser">
=== Multi-User settings
		 Eclipse RCP applications save configuration files in the
			folder
			".metadata". In the standard settings the
			Eclipse RCP
			installation
			directory will be used for this folder. If several
			users
			are using the
			same installation
			folder, then you should supply the
			parameter "-data"
			to specify an
			alternative location. If you specify
			the value
			"@user.home/applicationname" the configuration will be
			saved in
			a user
			specific folder.
		
	
