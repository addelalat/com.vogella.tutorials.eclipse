
== Exercise: Implementing a model processor

=== Target
		
			In this exercise
			you
			replace an existing menu entry with another
			menu entry.
		

	


=== Enter the dependencies
		
			Continue to use the
			`com.example.e4.rcp.todo.contribute`
			plug-in for this exercise.
		

		
			In the
			_MANIFEST.MF_
			, add the following plug-ins as dependencies to your
			_contribute_
			plug-in.
			<itemizedlist>
				<listitem>
					
						`org.eclipse.e4.ui.services`
					
				</listitem>
				<listitem>
					
						`org.eclipse.e4.core.contexts`
					
				</listitem>
				<listitem>
					
						`org.eclipse.e4.ui.model.workbench`
					
				</listitem>
			</itemizedlist>
		

	

=== Create the Java classes
		 Create the following dialog and handler classes. 

		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/processors/ExitDialog.java" />
			</programlisting>
		
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/processors/ExitHandlerWithCheck.java" />
			</programlisting>
		

		
			Create the model processor class. This class removes all menu
			entries
			which have "exit" in their ID from the menu with
			the
			`org.eclipse.ui.file.menu`
			ID. It also adds a new entry.
		

		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/processors/MenuProcessor.java" />
			</programlisting>
		

		<warning>
			
				Ensure that your menu entry labeled with "Exit" in the
				_Application.e4xmi_
				file, contains "exit" in its ID.
			
		</warning>

	


=== Register processor via extension
		
			In your
			`contribute`
			plug-in register your
			`processor`
			via the
			`org.eclipse.e4.workbench.model`
			extension.
		

		
image::processor04.png" />

				</imageobject>
			</mediaobject>
		

		
			Right-click on the processor and select
			menu:New[element]
			. The value from the ID parameter is the ID of the model element
			which is
			injected
			into your processor class. Use
			<parameter>org.eclipse.ui.file.menu</parameter>
			as
			<parameter>id*</parameter>
			parameter.
		

		
image::processor10.png" />

				</imageobject>
			</mediaobject>
		
		<warning>
			
				This assumes that you used
				_org.eclipse.ui.file.menu_
				as
				ID for your
				_File_
				menu in the main application model.
			
		</warning>

		<warning>
			
				The ID of the element defined in the extension point must match the
				`@Named`
				value in the processor, otherwise your menu is not injected into the
				processor.
			
		</warning>

	

=== Validating
		
			Start your application. In the model fragment exercises, the
			contribute plug-in was already added to your
			product.
		
		
			Ensure that the
			existing "Exit"
			menu entry is
			removed and your new
			menu entry with the
			"Another Exit"
			label is
			added to
			the file menu.
		
	





