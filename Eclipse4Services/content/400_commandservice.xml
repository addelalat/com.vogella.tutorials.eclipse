
	<title>Command and Handler service

[[commandservice1">

=== Purpose of the command and handler service
		<indexterm>
			<primary>Command service</primary>
		</indexterm>
		<indexterm>
			<primary>Handler service</primary>
		</indexterm>

		
			The command and handler
			services
			provide the functionality to work
			with commands and handlers.
		

		
			Via the handler service you can create, activate and trigger
			handlers based on commands. The command service allows you to access,
			and configure commands, i.e. by setting the parameters.
		

	


[[commandservice_access">
=== Access to command and handler service
		<indexterm>
			<primary>ECommandService</primary>
		</indexterm>
		<indexterm>
			<primary>EHandlerService</primary>
		</indexterm>
		
			You can use dependency injection to access the services. The relevant
			interfaces are
			<code>ECommandService</code>
			and
			<code>EHandlerService</code>
			.
		
	
[[commandservice_example1">
=== Example for executing a command

		
			The following example shows how to execute a handler for an
			existing command.
		

		
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/ehandlerservice/createhandler.java" />
			</programlisting>
		

	
[[commandservice_example">
=== Example for assigning a handler to a command

		
			The following example shows how to add a new handler to an existing
			command. It assumes that the
			<code>AboutHandler</code>
			class already exists.
		

		
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/ehandlerservice/createhandler.java" />
			</programlisting>
		

	
