
	<title>Example: DateTime Widget and Java 8 time API
	
		With Java 8, you have a redesigned Data and Time API. JFace data binding does currently not support not based
		on Java 8 therefore this
		Java 8 API
		cannot be used out of the box with JFace data binding.
	
	
		To use it, you have to implement your custom
		<code>WidgetValueProperty</code>
		.
	
	
		<programlisting language="java">
			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/java8/DateTimeSelectionProperty.java" />
		</programlisting>
	
	
		Here we implement a binding between the
		<code>DateTime</code>
		SWT widget and a
		<code>TemporalAccessor</code>
		, which for instance can be a
		<code>java.time.LocalDate</code>
		or
		<code>java.time.LocalTime</code>
		.
	
	
		The usage of the
		<code>DateTimeSelectionProperty</code>
		is demonstrated by the following listing.
	
	
		<programlisting language="java">
			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/java8/Java8DateTimePart.java" />
		</programlisting>
	
	
		In this sample we bind the
		<code>DateTime</code>
		widget to a
		<code>WritableValue</code>
		,
		which contains a
		<code>TemporalAccessor</code>
		instance and this
		<code>WritableValue</code>
		is changed by selecting a date in the
		<code>TableViewer</code>
		. The
		<code>dateTimeObservableValue</code>
		is also bound to a label, in order to see the
		changes by manually manipulating to the
		<code>DateTime</code>
		widget.
	
	
		The result of manually manipulating to the
		<code>DateTime</code>
		widget looks like this:
		<mediaobject>
			<imageobject>
				<imagedata fileref="./images/java8_DateTime_binding.png"/>
			</imageobject>
		</mediaobject>
	
	
		If you select a date in the
		<code>TableViewer</code>
		, this updates the
		<code>WritableValue</code>
		and therefore also the
		<code>DateTime</code>
		widget and also
		the
		<code>Label</code>
		, because all these are bound together.
	
