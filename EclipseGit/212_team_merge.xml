<section id="team_mergeoverview" role="wrapper">
	<title>Starting a merge operation in Eclipse</title>
	<section id="team_merge">
		<title>Merge</title>
		<indexterm>
			<primary>Eclipse Git</primary>
			<secondary>merge
			</secondary>
		</indexterm>
		<para>
			Eclipse supports merging of branches to add the changes
			committed on
			one branch into another branch.
		</para>
		<para>
			Checkout the branch into which you
			want to merge the
			changes into and
			select your project
			and
			<menuchoice>
				<guimenu>Team</guimenu>
				<guisubmenu>Merge</guisubmenu>
			</menuchoice>
			to start the merge dialog.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/egit_mergeoperation10.png" scale="40" />
				</imageobject>
				<textobject>
					<phrase>Team Merge menu</phrase>
				</textobject>
			</mediaobject>
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/egit_mergeoperation20.png" scale="40" />
				</imageobject>
				<textobject>
					<phrase>Team Merge menu</phrase>
				</textobject>
			</mediaobject>
		</para>


	</section>
	<section id="team_mergeconflicts">
		<title>Solving merge conflicts</title>
		<indexterm>
			<primary>Eclipse Git</primary>
			<secondary>merge conflicts, solving
			</secondary>
		</indexterm>
		<para>
			If during a Git operation, two changes are conflicting, you
			have to
			solve these conflicts manually.
			Eclipse Git
			highlights the affected
			files in the
			<guilabel>Package Explorer</guilabel>
			or
			<guilabel>Project Explorer</guilabel>
			view.
		</para>
		<para>
			Eclipse Git supports the resolution
			of these merge
			conflicts. To
			trigger this via the explorer views, right-click on a
			file with merge
			conflicts and select
			<menuchoice>
				<guimenu>Team</guimenu>
				<guisubmenu>Merge Tool</guisubmenu>
			</menuchoice>
			.
		</para>
		<para>
			You can also use the
			<guilabel>Git staging</guilabel>
			view
			to find the conflicting files. In large
			projects this is usually
			faster
			than navigating the
			<guilabel>Package Explorer</guilabel>
			or
			<guilabel>Project Explorer</guilabel>
			view.
		</para>
		<para>
			This opens a dialog, asking you which merge mode you would like to
			use.
			The easiest way to see the conflicting changes
			is
			to use the
			<guilabel>Use HEAD (the last local version) of conflicting files
			</guilabel>
			as merge mode. This way you see the original changes on the left
			side
			and the conflicting and non-conflicting changes
			on the right side.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/egitmerge08.png" />
				</imageobject>
				<textobject>
					<phrase>Selecting the merge model</phrase>
				</textobject>
			</mediaobject>
		</para>
		<para>
			You can manually edit the text on
			the left side or use the
			<guilabel>Copy current change from right to left</guilabel>
			button to copy the changes from right to left.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/egitmerge10.png" />
				</imageobject>
				<textobject>
					<phrase>Seeing merge conflicts</phrase>
				</textobject>
			</mediaobject>
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/egitmerge20.png" />
				</imageobject>
				<textobject>
					<phrase>Copy changes from right to left</phrase>
				</textobject>
			</mediaobject>
		</para>
		<para>
			Eclipse also allows to show the common ancestor of both commits to make the merge easier. Press the
			<guilabel>Hide/Show Ancestor Pane</guilabel>
			button for that. This is demonstrated by the
			following screenshots.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/threewaycomparemode10.png" />
				</imageobject>
				<textobject>
					<phrase>Three way merge view in Eclipse</phrase>
				</textobject>
			</mediaobject>
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/threewaycomparemode20.png" />
				</imageobject>
				<textobject>
					<phrase>Three way merge view in Eclipse</phrase>
				</textobject>
			</mediaobject>
		</para>
		<para>
			Once you have manually merged the changes, select
			<menuchoice>
				<guimenu>Team</guimenu>
				<guisubmenu>Add</guisubmenu>
			</menuchoice>
			from the context menu of the resource to mark the conflicts as
			resolved and
			commit the merge commit via
			<menuchoice>
				<guimenu>Team</guimenu>
				<guisubmenu>Commit</guisubmenu>
			</menuchoice>
			.
		</para>
	</section>

</section>
