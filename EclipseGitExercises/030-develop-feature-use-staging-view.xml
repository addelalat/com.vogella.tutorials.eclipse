== Develop another feature using the Staging View


===Target of this exercise
		
In this exercise you learn how work on multiple features in parallel. 


=== Create another local Feature Branch and check it out
		
When you develop independent things in parallel, you should develop them in different local branches. 
This way you isolate the changes via branches.
Make sure to set the starting point of these branches correctly. 
Right-click on your Project and select menu:Team[Switch to>New branch].
Select as _source ref the remote tracking branch `refs/remotes/origin/master`. 
Use _addPowerOperation_ as branch name. 
Check the _Checkout new branch_ checkbox and press the _Finish_ button.

image::create-branch-2.png[Create branch]
		
This creates and checkouts a new branch which starts where the remote tracking branch `refs/remotes/origin/master` points to.


=== Develop the new feature
		
Develop a `Power` class similar to the `Plus` class in the package `org.eclipse.example.calc.internal.operations`.
This should be done in the _org.eclipse.example.calc_ project.
Register the new class in the `Calculator.setupDefaultOperations()` method.
		
image::power-class.png[Power Class]

image::register-power.png[Register Power]	
	

=== Do a undesired modification
		
Sometimes you want to locally change a file but don&#8217;t want this modification to
			be included in the next commit.
			E.g. certain project modifications are
			important to you but others shouldn&#8217;t see them. To simulate
			this
			right-click on
			your project and select
			_Properties &gt; FindBugs_
			and select the button
			_Run
				automatically
			_
			(only available if FindBugs is installed in your Eclipse).
		
	

=== Open the Git Staging view and inspect the status
		
			Open the staging view by selecting
			menu:Window[Show View > Otherâ€¦ > Git Staging]
			.
			This view presents which files you have touched and which files will be
			in the
			next commit.
			_Unstaged Changes_
			lists those changes which you have done locally
			but which you have not yet added to the index.
			_Staged Changes_
			list those
			changes which you already have added to the index. You can drag and drop
			files
			from one area to the other.
		
		
			Git Staging view should list three files
			_.project_
			,
			_Calculator.java_
			and
			_Power.java_
			(
			_.project_
			appears only if you have configured FindBugs
			to run automatically).
		
		
			<inlinemediaobject>
				<imageobject>
					<imagedata fileref="./images/staging-view.png[Staging view</phrase>
				</textobject>
			</inlinemediaobject>
		
		
			Double-click on
			_.project_
			to inspect which changes you have done. This opens the
			_Compare_
			editor for this file.
		
		
			<inlinemediaobject>
				<imageobject>
					<imagedata fileref="./images/staging-view-2.png[Staging view</phrase>
				</textobject>
			</inlinemediaobject>
		
		
			Drag and drop
			_Calculator.java_
			and
			_Power.java_
			to the
			_Staged Changes_
			area
			to mark that they should be included in the next commit.
		
		
			<inlinemediaobject>
				<imageobject>
					<imagedata fileref="./images/staging-view-3.png[Staging view</phrase>
				</textobject>
			</inlinemediaobject>
		

=== Commit your change
		
In the _Git Staging_ view enter a commit message in the _Commit message_ field and click on the btn:[Commit] button.
		
		
			<inlinemediaobject>
				<imageobject>
					<imagedata fileref="./images/staging-view-4.png[Staging view</phrase>
				</textobject>
			</inlinemediaobject>
		
	
	

=== Cleanup
		
After inspecting your recent change, you decide that this change should be reverted. 
Revert your change by right-clicking on the _.project_ file in the _Git Staging_ view. 
Select the menu:[Replace with File in Git Index] entry
