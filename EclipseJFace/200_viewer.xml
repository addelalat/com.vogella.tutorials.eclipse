== Eclipse JFace Viewers

		

		<indexterm>
			<primary>JFace</primary>
			<secondary>Viewer</secondary>
		</indexterm>
=== Purpose of the JFace viewer framework
		
			The
			JFace viewer
			framework
			allows you to display a domain model in
			a standard SWT widget
			like
			list,
			combo, tree or table
			without
			converting
			the domain
			model
			beforehand.
		
		
			A
			viewer
			allows you to set a
			_content provider_
			which provides the data for the
			viewer. The
			content provider
			makes no
			assumption about the presentation of the data model.
		
		
			You can also assign at least one
			_label provider_
			to a
			viewer. The label provider defines how the data from the model
			will be
			displayed in the
			viewer.
		

	

=== Standard JFace viewer
		
			JFace provides several standard
			viewer implementations. These
			viewers
			are part of the
			`org.eclipse.jface.viewers`
			package. The following
			list contains
			the most important ones.

			<itemizedlist>
				<listitem>
					
						`ComboViewer`
					
				</listitem>
				<listitem>
					
						`ListViewer`
					
				</listitem>
				<listitem>
					
						`TreeViewer`
					
				</listitem>
				<listitem>
					
						`TableViewer`
					
				</listitem>
			</itemizedlist>
		
	

=== Standard content and label provider
		
			The related interfaces for defining a
			content provider
			are described in
			the following table.

			<table frame='all'>
		=== Content providers
				<tgroup cols='3' align='left' colsep='1' rowsep='1'>
					<colspec colname='c1' colwidth="1*" />
					<colspec colname='c2' colwidth="1*" />
					<colspec colname='c3' colwidth="2*" />
					<thead>
						<row>
							<entry>Interface</entry>
							<entry>Default implementation</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>IStructuredContentProvider</entry>
							<entry>ArrayContentProvider</entry>
							<entry>
								Used for the List-, Combo- and TableViewer.
								JFace provides
								a
								default
								implementation for Collections and Arrays with the
								`ArrayContentProvider`
								class. Because the
								`ArrayContentProvider`
								class
								does not store any data, it is possible to share an
								instance
								with
								several viewers. To get a
								shared instance use the
								`ArrayContentProvider.getInstance()`
								method.
							</entry>
						</row>
						<row>
							<entry> ITreeContentProvider</entry>
							<entry>Not available</entry>
							<entry>Used for the TreeViewer class. Has additional
								methods
								to
								determine the
								children and the parents of the elements.
							</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
		

		
			Important standard label providers are listed in the following table.

			<table frame='all'>
		=== Label providers
				<tgroup cols='3' align='left' colsep='1' rowsep='1'>
					<colspec colname='c1' colwidth="1*" />
					<colspec colname='c2' colwidth="1*" />
					<colspec colname='c3' colwidth="3*" />
					<thead>
						<row>
							<entry>Required class</entry>
							<entry>Standard label providers </entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>ILabelProvider</entry>
							<entry>LabelProvider</entry>
							<entry>Used for lists and trees,
								can return an icon and a label
								per element.
							</entry>
						</row>
						<row>
							<entry>CellLabelProvider</entry>
							<entry>ColumnLabelProvider</entry>
							<entry>Used for tables.
								Defines a label provider per column.
							</entry>
						</row>
					</tbody>
				</tgroup>
			</table>

		
	

	
	
