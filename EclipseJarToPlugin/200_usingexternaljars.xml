
== Integrating external jars / third party libraries
	
		The following gives an example how to convert a standard Java JAR
		to an Eclipse
		plug-in.
	

=== Creating a plug-in project for your jar
		
			Create a new plug-in project by selecting
			menu:File[New > Project > Plug-in Development > Plug-in from Existing JAR Archives]
			.
		
		
image::externaljars20.gif"/>

				</imageobject>
			</mediaobject>
		
		 Add the JAR files you want to have in this new plug-in. Press
			next.
		
		
image::externaljars25.gif"/>

				</imageobject>
			</mediaobject>
		
		
			Enter a name and a version for your new plug-in. Uncheck the
			_Unzip the JAR archive into the project_
			flag. Unchecking this flag
			prevents
			that the class files are extracted
			from the
			JAR file which is
			not
			necessary to use them.
		
		
			Afterwards press the
			_Finish_
			button in the wizard.
		
		
image::externaljars30.gif"/>

				</imageobject>
			</mediaobject>
		
		
			You have created a new plug-in for the selected JAR files. Open
			the file
			_MANIFEST.MF_
			and validate that all required packages are exported on
			the tab
			_Runtime_
			. All the packages from your JAR files
			should be
			included
			in the
			exported
			packages as OSGi will otherwise prevent
			other plug-ins
			from
			accessing
			them.
		
	

=== Using the new plug-in project
		
			In the plug-in project which should access the library, open the
			_MANIFEST.MF_
			file and select the
			_Dependencies_
			tab. Add the new plug-in as dependency.
		
		
image::externaljars40.gif"/>
				</imageobject>
			</mediaobject>
		
	

