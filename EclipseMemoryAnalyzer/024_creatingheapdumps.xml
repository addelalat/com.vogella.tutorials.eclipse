
<section id="createheapdumps">
	<title>Creating heap dumps for Java programs</title>
	<para>
		It is possible to instruct the JVM to create automatically a
		<wordasword>heap dump</wordasword>
		in case that it runs out of memory, i.e. in case of a
		<code>OutOfMemoryError</code>
		error. To instruct the JVM to create a
		<wordasword>heap dump</wordasword>
		in such a situation, start your Java application with the
		<parameter>-XX:+HeapDumpOnOutOfMemoryError</parameter>
		option.
	</para>

	<para>
		Use the
		<menuchoice>
			<guimenu>File</guimenu>
			<guisubmenu>New</guisubmenu>
			<guisubmenu>Other...</guisubmenu>
			<guisubmenu>Other</guisubmenu>
			<guisubmenu>Heap Dump</guisubmenu>
		</menuchoice>
		menu entry to open a dialog to select for which process you want to
		acquire a memory dump.
	</para>
	<para>
		<mediaobject>
			<imageobject>
				<imagedata fileref="images/mat_getheapdump10.png"/>
			</imageobject>
			<textobject>
				<phrase>Creating a heap dump</phrase>
			</textobject>
		</mediaobject>
	</para>
	<para>
		Select the process for a heap dump in the following dialog and press
		the
		<guilabel>Finish</guilabel>
		button.
	</para>

	<para>
		Alternatively you can also interactively create a heap dump via
		Eclipse. For this
		open the
		<guilabel>Memory Analysis</guilabel>
		perspective via
		<menuchoice>
			<guimenu>Open Perspective</guimenu>
			<guisubmenu>Other...</guisubmenu>
		</menuchoice>
		.
	</para>
	<para>
		<mediaobject>
			<imageobject>
				<imagedata fileref="images/matperspective20.png"/>
			</imageobject>
			<textobject>
				<phrase>Opening the MAT perspective</phrase>
			</textobject>
		</mediaobject>
	</para>


	<para>If you trigger the creation of the heap manually the JVM performs
		a garbage collector run before it writes the heap dump.
	</para>
</section>
