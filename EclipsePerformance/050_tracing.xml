
== Using the build-in tracing facilities of Eclipse

=== What is tracing?
		
		
			Eclipse provides a tracing facility which can be activated on demand. If turned on,
			the Eclipse IDE
			writes
			additional information to a specified log file or the console.
		
	

=== Turning on tracing via an options file
		To turn tracing on, you need to create a trace-options file that
			contains key-value pairs for the tracing options
			which should be turned on.
		
		
			By
			default, this file is called .options and the Eclipse runtime
			looks
			for such a file in the
			Eclipse
			install
			directory. The text should
			contain
			one key=value pair per line. To turn on
			the trace
			options in the
			preceding
			two examples,
			you need an options
			file that
			looks like this:
		
		
[source,java]
----
include::res/tracing/options.txt[]
----
		
		
			You can use the corresponding preference dialog to find the values
			you want to enable. See
			<xref linkend="tracing_runonatruntime" />
			.
		
		
			Finally, you need to enable the tracing mechanism by starting
			Eclipse with the
			_-debug_
			command line argument. You
			can optionally
			specify the location of the options file as a URL or a
			file-system path after
			the -debug
			argument.
		

		
[source,java]
----
include::res/tracing/run.txt[]
----
		
		
			For example the
			_Starting application_
			describes when OSGi is done with its initialization and the
			_Application Started_
			tells you when the application has been started.
			Afterwards you can extract the information which interest you the
			most. Here are a few commands which extract
			the
			starting time
			of each bundle and sort the bundles by this time.
		
		
[source,java]
----
include::res/tracing/extract.txt[]
----
		

		The following is another example for an .option file in which you trace the resources.
		
[source,java]
----
include::res/tracing/options_resources.txt[]
----
		


	


=== Turning on tracing at runtime

		It is also possible to turn on some tracing options at runtime
			via the
			Eclipse IDE preferences as depicted in the
			following
			screenshot.
		

		
image::enabletracing10.png[Enable Tracing at runtime.,pdfwidth=60%]
		

	

=== Implement tracing for your plug-in
		
			Can you also implement tracing for your custom plug-in, see
			https://www.winklerweb.net/index.php/blog/12-eclipse/10-finding-the-almost-new-eclipse-tracing-api">Using Eclipse Tracing API
			. To add your tracing options to the preference preference page, to allow users to turn them on at run time, use
			extension point
			the
			`org.eclipse.ui.trace.traceComponents`
			. See
			`TracingPreferencePage`
			for the implementation of this.
		
	
