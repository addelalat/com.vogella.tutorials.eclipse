
== Eclipse and tests

=== Eclipse projects and their test suite
		
			Most Eclipse projects provide a test suite which can be used to
			validate that everything still works as planned.
		
		
			For example, in case you are changing the Eclipse
			platform code
			you should
			ensure that
			the platform tests still
			perform as
			planned. If
			changes in the tests are
			required, you should
			adjust the tests
			with the
			same Gerrit
			change.
		
	



=== Version of JUnit
		
			At the time of this writing, lots of unit tests of the Eclipse
			projects are still based on JUnit 3.x.
			JUnit 3.x uses
			the
			_test_
			prefix of method names to identify test methods.
		
		
			Several projects are currently migrating their test to JUnit 4, so this will hopefully change in the future.
		
	



=== Tips: running the unit tests on a virtual server
		On Unix based system you can also run the user interface tests
			with a virtual display. This makes the execution
			of the tests faster
			and allows to developer to continue to work on the same machine.
		
		<tip>
			This step is optional. You can of course run the tests without
				a virtual
				server.
			
		</tip>
		
			The Eclipse platform unit tests starts an Eclipse IDE and
			visually
			interacts with it. This screen flickering can
			be annoying.
			You can
			use a virtual server and execute the tests on this virtual
			device.
		

		
			On Ubuntu you can install the virtual server and the client
			via
			the
			following
			commands. The
			client is not required to
			run the unit tests
			but useful in case you
			want to view the test execution on the virtual
			server.
		
		
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/vncserver/install.txt" />
			</programlisting>
		
		You start the server with the following parameters.
		
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/vncserver/start.txt" />
			</programlisting>
		
		
			In the Eclipse launch configuration you can define the display
			which is used for the test execution.
		
		
image::settingdisplayforunittests.png" scale="30[Setting the Display variable in Eclipse,pdfwidth=60%]
		
		
			If you are running a Maven / Tycho build from the command line, you
			can export the display variable.
			
				<programlisting language="bourne">
					<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/vncserver/display.txt" />
				</programlisting>
			
		
		
			If you want to watch the unit tests, you can also connect to the
			virtual server via the vncclient.
		
		
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/vncserver/connect.txt" />
			</programlisting>
		
	


