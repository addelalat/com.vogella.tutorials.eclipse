
	<title>Contribute a menu to existing Part
[[contribute_overview">
=== Overview
		
			In this example we will add a new context menu entry to the
			_Package Explorer_
			part. The context menu is displayed if
			the user
			selects a
			file in
			the
			package explorer via a right mouse click.
			We will
			offer
			the option
			to
			create a HTML page from a Java source file.
		
		
			To contribute to an existing menu or toolbar, you need to know the
			corresponding ID. This ID can be found via the
			_Menu Spy_
			. To start the Menu Spy use ALT + Shift + F2 and click on the menu entry you are interested in.
		
	
[[contribute_packageexplorer">
=== Contribute to the Package Explorer
		
			Create a new plug-in project called
			_de.vogella.plugin.htmlconverter_
			.
			Do not use a template.
		

		
			Open the
			<filename>META-INF/MANIFEST.MF</filename>
			file. Select the
			_Dependencies_
			tab
			and add the following dependencies to your plug-in.
			<itemizedlist>
				<listitem>
					
						org.eclipse.jdt.core
					
				</listitem>
				<listitem>
					org.eclipse.core.runtime
				</listitem>
				<listitem>
					org.eclipse.core.resources
				</listitem>
				<listitem>
					org.eclipse.core.expressions
				</listitem>
			</itemizedlist>
		

		
			Open the
			_Extensions_
			tab in your editor, or if the tab is not visible, click the
			_Extensions_
			link on the
			_Overview_
			tab.
			Add a command with the ID
			<code>de.vogella.plugin.htmlconverter.convert</code>
			and
			the default handler
			<code>de.vogella.plugin.htmlconverter.handler.ConvertHandler</code>
			to your plug-in.
		
		
			Add
			this command to the menu via the extension point
			<code>org.eclipse.ui.menus</code>
			and use
			<property>popup:org.eclipse.jdt.ui.PackageExplorer</property>
			as the
			<parameter>locationURI</parameter>
			. Set the label to
			<parameter>Create HTML</parameter>
			for this contribution.
		
		
			The resulting file
			<code>plugin.xml</code>
			should look like the following.
		
		
			<programlisting language="xml">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/htmlconverter/pluginsimple.adoc[]
			</programlisting>
		

		
			Eclipse allows to
			save additional information for each file. You
			can
			use the
			<code>IResource</code>
			interface and the
			<code>setPersistentProperty()</code>
			and
			<code>getPersistentProperty()</code>
			methods. With these functions you can save Strings on files.
			We use
			these functions to save a directory for Java source
			files which
			were
			already exported via HTML.
		


		
			Create the following
			<code>ConvertHandler</code>
			class.
		

		
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text"
					href="./examples/htmlconverter/ConvertHandler.java" />
			</programlisting>
		

		
			If you start this plug-in, you should be able to create
			HTML
			output from a Java source file.
		
		
image::html40.gif" scale="60" />
				</imageobject>
			</mediaobject>
		
	
[[contextmenu_restrict">
=== Restrict the extension - Visible When
		
			Currently our context menu is displayed all the time.
			We would
			like to
			show
			it only if a source
			file is selected. For
			this we will use
			a
			"visible-when" definition.
		
		
			Add the
			<code>org.eclipse.core.expressions</code>
			plug-in as dependency to your plug-in. Select your menu
			contribution.
			Using the right mouse add the condition to the
			command that it should
			only be visible if a file is selected
			which represents a
			<code>ICompilationUnit</code>
			from the
			<code>org.eclipse.jdt.core</code>
			package.
		
		
			For this exercise you use the
			predefined variable
			<parameter>activeMenuSelection</parameter>
			which contains the selection in the menu and iterate over
			it. If the
			selection can get adapted to
			<code>ICompilationUnit</code>
			,
			then the contribution will be visible.
		
		
			This will result in the following
			<filename>plugin.xml</filename>
			.
		
		
			<programlisting language="xml">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/htmlconverter/plugin.adoc[]
			</programlisting>
		
		
			If you now start your plug-in, the menu entry should only be
			visible if at least one compilation unit has been
			selected.
		
	
