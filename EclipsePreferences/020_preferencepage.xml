
	<title>Preference handling in Eclipse 3.x

[[preferences_preferencepage">
=== Preference Page
		
			Eclipse 3.x provides a standard dialog to display and
			change
			preference values via a preference dialog.
			Please note
			that this dialog does not work for Eclipse 4 RCP applications.
		
		
			To add a page to this preference dialog a
			plug-in must provide an
			contribution to the
			<code>org.eclipse.ui.preferencePages</code>
			extension point.

		
		
			This extension point defines a class which
			is
			responsible for creating
			a user interface and storing the preference
			values.
			This
			class must
			implement
			<code>IWorkbenchPreferencePage</code>
			and must have a non-parameter constructor.
		
		
			The
			<code>PreferencePage</code>
			class or one of its subclasses can get extended; a good
			template is
			usually
			<code>FieldEditorPreferencePage</code>
			.
		
		
			To open the Preference dialog, you can use the
			<code>org.eclipse.ui.window.preferences</code>
			command.
		
	

[[preferences_security">
=== Secure storage of preferences
		
			Eclipse allows to encrypt preference values via the
			<code>org.eclipse.equinox.security</code>
			plug-in.
		
		
			The key / value pairs will be stored in the
			<filename>secure.storage</filename>
			file in
			the
			<filename>.eclipse/org.eclipse.equinox.security</filename>
			folder of the users home
			directory.
			Eclipse uses a class of type
			<code>PasswordProvider</code>
			for encrypting the preferences and has a default class registered.
		
		
			Via the
			<code>org.eclipse.equinox.security.secureStorage</code>
			extension point
			you can register your
			own
			PasswordProvider.
		

	

[[preferences_pluginaccess">
=== Access Preferences in different plug-ins
		
			You can access preferences in other plug-ins via the
			<code>PreferenceService</code>
			service.
		
		
			For example, to access the "MySTRING1" preference in the
			"de.vogella.preferences.page" plug-in, you can use the
			following:
		
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/access/AccessPreferences.java" />
			</programlisting>
		
	

[[preferences_listener">
=== Reacting to changes in the preferences
		
			You can register
			<code>IPropertyChangeListener</code>
			instances to changes in the preference values.
			These
			listener are called by the Eclipse
			framework if the reference
			value
			changes.
		
		
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/snippets/listener.txt" />
			</programlisting>
		



	

