
	<title>The usage of run configurations
[[runconfiguration_overview">
=== What are run configurations?
		<indexterm>
			<primary>Run configuration</primary>
		</indexterm>
		
			A
			_run configuration_
			defines the environment which will be used to execute a generic
			launch.
			For example, it defines
			arguments to the Java
			virtual machine
			(VM), plug-in
			(classpath) dependencies, etc.
		
		
			If you start an Eclipse
			application the corresponding run
			configuration is automatically
			created or
			updated.
		
		<tip>
			If you are starting an Eclipse runtime IDE for testing, and clear the workspace location the next run will
				prompt you to choose a workspace.
			
		</tip>
	
[[runconfiguration_seeing">
=== Reviewing run configurations
		
			To review and edit your run configurations select
			menu:Run[Run
					Configurations...
				]
			from the Eclipse menu.
		
		
			On the
			_Main_
			tab in the field
			_Location_
			,
			you specify where the
			Eclipse IDE
			creates the files necessary to
			start your Eclipse based
			application.
		
		
image::lauchconfiguration20.png" />
				</imageobject>
				<textobject>
					<phrase>Shows the run configuration, highlighting the location
						setting,pdfwidth=60%]
		

	



[[runconfigurationpara">
=== Run arguments
		<indexterm>
			<primary>Run configuration arguments</primary>
		</indexterm>
		<indexterm>
			<primary>Run arguments</primary>
			<see>Run configuration arguments</see>
		</indexterm>
		<indexterm>
			<primary>Run configuration arguments</primary>
			<secondary>consoleLog</secondary>
		</indexterm>
		<indexterm>
			<primary>Run configuration arguments</primary>
			<secondary>console</secondary>
		</indexterm>
		<indexterm>
			<primary>Run configuration arguments</primary>
			<secondary>nl</secondary>
		</indexterm>
		<indexterm>
			<primary>Run configuration arguments</primary>
			<secondary>noExit</secondary>
		</indexterm>
		<indexterm>
			<primary>Run configuration arguments</primary>
			<secondary>clearPersistedState</secondary>
		</indexterm>
		
			The run configuration allows you to add additional start arguments
			for
			your
			application on the
			_Arguments_
			tab. By default Eclipse includes already several parameters, e.g.
			parameters for
			<parameter>-os</parameter>
			,
			<parameter>-ws</parameter>
			and
			<parameter>-arch</parameter>
			to specify the architecture on which
			the application is running.
		
		
			<mediaobject>
				<imageobject>
					<imagedata scale="60" fileref="images/launchconfiguration40.png" />
				</imageobject>
				<textobject>
					<phrase>-consoleLog in the run configuration,pdfwidth=60%]
		
		<tip>
			
				To pass system properties to your Eclipse application, you can add launch parameters using the -D switch.
				As
				example,
				if you add the argument
				<parameter>-Dmy.product.loglevel=INFO</parameter>
				, you can get the "INFO" value with
				<code>System.getProperties("my.product.loglevel")</code>
				.
			
		</tip>

		The following table lists several useful launch arguments.

		<table frame='all'>
	=== Launch parameters
			<tgroup cols='2' align='left' colsep='1' rowsep='1'>
				<colspec colname='c1' colwidth="2*" />
				<colspec colname='c2' colwidth="5*" />
				<thead>
					<row>
						<entry>Parameter</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>
							<parameter class='option'>consoleLog</parameter>
						</entry>
						<entry>
							Error messages of the running
							Eclipse application
							are written to
							standard-out (
							<code>System.out</code>
							) which can be viewed in
							the
							Eclipse IDE
							_Console_
							view that started the RCP application.
						</entry>
					</row>
					<row>
						<entry>
							<parameter class='option'>nl</parameter>
						</entry>
						<entry>
							
								Specifies
								the locale used for
								your
								application. The locale
								defines
								the
								language specific settings, i.e., which
								translation is
								used and the
								number, date and currency formatting.
							
							
								For example
								<parameter class='option'>-nl en</parameter>
								starts your application using the
								English language. This is
								useful
								for testing translations.
							
						</entry>
					</row>
					<row>
						<entry>
							<parameter class='option'>console</parameter>
						</entry>
						<entry>Provides access to an
							OSGi
							console where you can check the
							status of
							your application.
						</entry>
					</row>
					<row>
						<entry>
							<parameter class='option'>noExit</parameter>
						</entry>
						<entry>Keeps the OSGi console open
							even if the
							application
							crashes.
							This allows to analyze the application
							dependencies even if the
							application crashes during startup.
						</entry>
					</row>
					<row>
						<entry>
							<parameter class='option'>clearPersistedState</parameter>
						</entry>
						<entry>Deletes cached runtime changes of the Eclipse 4 application
							model.
						</entry>
					</row>
				</tbody>
			</tgroup>
		</table>


	


