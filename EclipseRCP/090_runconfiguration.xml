<section id="runconfiguration" role="wrapper">
	<title>The usage of run configurations</title>
	<section id="runconfiguration_overview">
		<title>What are run configurations?</title>
		<indexterm>
			<primary>Run configuration</primary>
		</indexterm>
		<para>
			A
			<wordasword>run configuration</wordasword>
			defines the environment which will be used to execute a generic
			launch.
			For example, it defines
			arguments to the Java
			virtual machine
			(VM), plug-in
			(classpath) dependencies, etc.
		</para>
		<para>
			If you start an Eclipse
			application the corresponding run
			configuration is automatically
			created or
			updated.
		</para>
		<tip>
			<para>If you are starting an Eclipse runtime IDE for testing, and clear the workspace location the next run will
				prompt you to choose a workspace.
			</para>
		</tip>
	</section>
	<section id="runconfiguration_seeing">
		<title>Reviewing run configurations</title>
		<para>
			To review and edit your run configurations select
			<menuchoice>
				<guimenu>Run</guimenu>
				<guisubmenu>Run
					Configurations...
				</guisubmenu>
			</menuchoice>
			from the Eclipse menu.
		</para>
		<para>
			On the
			<guilabel>Main</guilabel>
			tab in the field
			<guilabel>Location</guilabel>
			,
			you specify where the
			Eclipse IDE
			creates the files necessary to
			start your Eclipse based
			application.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/lauchconfiguration20.png" />
				</imageobject>
				<textobject>
					<phrase>Shows the run configuration, highlighting the location
						setting</phrase>
				</textobject>
			</mediaobject>
		</para>

	</section>



	<section id="runconfigurationpara">
		<title>Run arguments</title>
		<indexterm>
			<primary>Run configuration arguments</primary>
		</indexterm>
		<indexterm>
			<primary>Run arguments</primary>
			<see>Run configuration arguments</see>
		</indexterm>
		<indexterm>
			<primary>Run configuration arguments</primary>
			<secondary>consoleLog</secondary>
		</indexterm>
		<indexterm>
			<primary>Run configuration arguments</primary>
			<secondary>console</secondary>
		</indexterm>
		<indexterm>
			<primary>Run configuration arguments</primary>
			<secondary>nl</secondary>
		</indexterm>
		<indexterm>
			<primary>Run configuration arguments</primary>
			<secondary>noExit</secondary>
		</indexterm>
		<indexterm>
			<primary>Run configuration arguments</primary>
			<secondary>clearPersistedState</secondary>
		</indexterm>
		<para>
			The run configuration allows you to add additional start arguments
			for
			your
			application on the
			<guilabel>Arguments</guilabel>
			tab. By default Eclipse includes already several parameters, e.g.
			parameters for
			<parameter>-os</parameter>
			,
			<parameter>-ws</parameter>
			and
			<parameter>-arch</parameter>
			to specify the architecture on which
			the application is running.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata scale="60" fileref="images/launchconfiguration40.png" />
				</imageobject>
				<textobject>
					<phrase>-consoleLog in the run configuration</phrase>
				</textobject>
			</mediaobject>
		</para>
		<tip>
			<para>
				To pass system properties to your Eclipse application, you can add launch parameters using the -D switch.
				As
				example,
				if you add the argument
				<parameter>-Dmy.product.loglevel=INFO</parameter>
				, you can get the "INFO" value with
				<code>System.getProperties("my.product.loglevel")</code>
				.
			</para>
		</tip>

		<para>The following table lists several useful launch arguments.</para>

		<table frame='all'>
			<title>Launch parameters</title>
			<tgroup cols='2' align='left' colsep='1' rowsep='1'>
				<colspec colname='c1' colwidth="2*" />
				<colspec colname='c2' colwidth="5*" />
				<thead>
					<row>
						<entry>Parameter</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>
							<parameter class='option'>consoleLog</parameter>
						</entry>
						<entry>
							Error messages of the running
							Eclipse application
							are written to
							standard-out (
							<code>System.out</code>
							) which can be viewed in
							the
							Eclipse IDE
							<wordasword>Console</wordasword>
							view that started the RCP application.
						</entry>
					</row>
					<row>
						<entry>
							<parameter class='option'>nl</parameter>
						</entry>
						<entry>
							<para>
								Specifies
								the locale used for
								your
								application. The locale
								defines
								the
								language specific settings, i.e., which
								translation is
								used and the
								number, date and currency formatting.
							</para>
							<para>
								For example
								<parameter class='option'>-nl en</parameter>
								starts your application using the
								English language. This is
								useful
								for testing translations.
							</para>
						</entry>
					</row>
					<row>
						<entry>
							<parameter class='option'>console</parameter>
						</entry>
						<entry>Provides access to an
							OSGi
							console where you can check the
							status of
							your application.
						</entry>
					</row>
					<row>
						<entry>
							<parameter class='option'>noExit</parameter>
						</entry>
						<entry>Keeps the OSGi console open
							even if the
							application
							crashes.
							This allows to analyze the application
							dependencies even if the
							application crashes during startup.
						</entry>
					</row>
					<row>
						<entry>
							<parameter class='option'>clearPersistedState</parameter>
						</entry>
						<entry>Deletes cached runtime changes of the Eclipse 4 application
							model.
						</entry>
					</row>
				</tbody>
			</tgroup>
		</table>


	</section>


</section>