
	<title>Exercise: From plug-in to Eclipse 4 application
[[plugin_creatinge4_target">
=== Target
		
			In this chapter you convert the
			generated plug-in into an
			Eclipse
			RCP
			application.
		
	
[[plugin_creatinge4_productproject">
=== Create a project to host the product configuration file
		
			Create a new project called
			_com.example.e4.rcp.todo.product_
			via
			menu:File[New > Others... > General > Project]
			.
		

		
image::productproject10.png" />
				</imageobject>
				<textobject>
					<phrase>,pdfwidth=60%]
		

		
image::productproject12.png" />
				</imageobject>
				<textobject>
					<phrase>,pdfwidth=60%]
		
	

[[plugin_creatinge4_product">
=== Create a product configuration file

		
			Right-click on this project and select
			menu:New[Product Configuration]
			.
		

		
image::training_product10.png" scale="35" />
				</imageobject>
				<textobject>
					<phrase>,pdfwidth=60%]
		
		
			Create a product configuration file called
			<filename>todo.product</filename>
			inside the
			<filename>com.example.e4.rcp.todo.product</filename>
			folder.
		
		
image::training_product20.png" scale="35" />
				</imageobject>
				<textobject>
					<phrase>,pdfwidth=60%]
		
		
			Press the
			_Finish_
			button. The file is created and opened in an editor.
		

		
			Press the
			_New..._
			button on the
			_Overview_
			tab of the
			product
			editor.
		

		
image::training_product28.png" />
				</imageobject>
				<textobject>
					<phrase>Press the new button in the product editor,pdfwidth=60%]
		

		

			Enter
			_to-do_
			as the
			_Product Name_
			, your plug-in as the
			_Defining Plug-in_
			,
			_product_
			as the
			_Product ID_
			and select
			<code>org.eclipse.e4.ui.workbench.swt.E4Application</code>
			in the
			_Application_
			combo box.
		
		
image::training_product30.png" />
				</imageobject>
				<textobject>
					<phrase>Entering the product details,pdfwidth=60%]
		

	

[[plugin_startlevels">
=== Configure the start levels
		<indexterm>
			<primary>Start level in a product
			</primary>
		</indexterm>
		<indexterm>
			<primary>Product Configuration
			</primary>
			<secondary>Start Level
			</secondary>
		</indexterm>
		
			Switch to the
			_Configuration_
			tab in the product editor and press the
			_Add Recommended..._
			button. These settings are for example used by the
			Maven/Tycho build system,hence it
			is good practice to configure
			them.

		
		
image::rcpproductstartlevel10.png" />
				</imageobject>
				<textobject>
					<phrase>Setting the default start level,pdfwidth=60%]
		
	

[[plugin_feature">
=== Create a feature project
		
			Create a new
			feature project called
			_com.example.e4.rcp.todo.feature_
			via
			menu:File[New > Other... > Plug-in Development > Feature Project]
			.
		
		
			You can press the
			_Finish_
			button
			on the first wizard page.
		
		
image::training_product31.png" />
				</imageobject>
				<textobject>
					<phrase>Feature project,pdfwidth=60%]
		
		
			Afterwards select the
			_Plug-ins_
			tab in the editor of the
			<filename>feature.xml</filename>
			file. Press the
			_Add..._
			button and
			include the
			<code>com.example.e4.rcp.todo</code>
			plug-in into this feature.
		

		
image::training_product34.png" />
				</imageobject>
				<textobject>
					<phrase>Feature project,pdfwidth=60%]
		
		<warning>
			
				Ensure you have added the plug-in on the
				_Included Plug-ins_
				tab to include it into your feature. Using the
				_Dependencies_
				tab is wrong for this exercise.
			
		</warning>
	

[[plugin_dependencies">
=== Enter the feature as content into the product
		
			Open your
			<filename>todo.product</filename>
			product file and change your product configuration file to use
			features.
		
		
			For this select the
			_features_
			option
			on the
			_Overview_
			tab of the product editor.
		
		
image::e4_productfeature10.png" />
				</imageobject>
				<textobject>
					<phrase>Switching to feature on the product configuration file,pdfwidth=60%]
		

		
			Select the
			_Contents_
			tab
			and add the following features via the
			<guibutton>Add...</guibutton>
			button.
			<itemizedlist>
				<listitem>
					
						<code>com.example.e4.rcp.todo.feature</code>
					
				</listitem>
				<listitem>
					
						<code>org.eclipse.e4.rcp</code>
					
				</listitem>

				<listitem>
					
						<code>org.eclipse.emf.ecore</code>
					
				</listitem>
				<listitem>
					
						<code>org.eclipse.emf.common</code>
					
				</listitem>

			</itemizedlist>
		

		
image::e4_productfeature21.png" />
				</imageobject>
				<textobject>
					<phrase>Adding the required features to your product,pdfwidth=60%]
		

		<note>
			If you cannot add one of the listed features to
				your
				product,
				ensure
				that you have
				changed your product to be based
				on
				features.
			
		</note>
	
[[plugin_versiondependencies">
=== Remove the version dependency from the features in the product
		
		
			To avoid problems with different versions of the
			<code>org.eclipse.e4.rcp</code>
			feature, delete the version number from your product.
			You can
			do this
			via
			the
			_Properties..._
			button on the
			_Contents_
			tab of the product configuration editor.
		
		
image::e4_productfeature26.png" />
				</imageobject>
				<textobject>
					<phrase>Remove version number,pdfwidth=60%]
		

		
image::e4_productfeature28.png" />
				</imageobject>
				<textobject>
					<phrase>Remove version number,pdfwidth=60%]
		

		If other features have a version dependency, also remove these. The result should look similar to the following
			screenshot.
		
		
image::e4_productfeature30.png" />
				</imageobject>
				<textobject>
					<phrase>Remove version number via the Properties button,pdfwidth=60%]
		

	

[[plugin_creatinge4_e4xmi">
=== Create an application model
		
			Select
			menu:File[New > Other... > Eclipse 4 >  Model > New Application Model]
			to open a wizard to create an application model
			file.
		
		
image::training_product48.png" />
				</imageobject>
				<textobject>
					<phrase>,pdfwidth=60%]
		

		
			Enter your
			<code>com.example.e4.rcp.todo</code>
			application plug-in
			as the container and use the file name
			suggested by
			the
			wizard.
		
		
image::training_product50.png" />
				</imageobject>
				<textobject>
					<phrase>,pdfwidth=60%]
		

		
			Press the
			_Finish_
			button. This triggers the creation of the
			<filename>Application.e4xmi</filename>
			file inside the
			<code>com.example.e4.rcp.todo</code>
			plug-in and opens it.
		
	
[[plugin_creatinge4_modelelements">
=== Add a window to the application model
		
			Add one
			window
			to your application model so you have a visual
			component.
		
		

			Right-click on the
			_Windows and Dialogs_
			node, and select
			<code>Trimmed Window</code>
			as depicted in the following screenshot.
		
		
image::tutorial_product80.png" />
				</imageobject>
				<textobject>
					<phrase>Adding a trimmed window,pdfwidth=60%]
		
		Enter an ID, the position and size of the window and a label as
			shown in
			the
			screenshot below.
		
		
image::tutorial_product90.png" scale="35" />
				</imageobject>
				<textobject>
					<phrase>Enter the data for the TrimmedWindow in the model editor,pdfwidth=60%]
		

		<tip>
			
				If you start and close your application the last state of the
				application is persisted by the framework and restored
				the next
				time
				you start this application. This is
				undesired during
				development, as
				the latest state from the
				application
				model file should be
				used.
				In
				<xref linkend="tutorial_clearpesistence_task" />
				you configure your product to remove all the persisted changes from
				the last run.
			
		</tip>
	


[[plugin_creatinge4_start">
=== Start the application
		
			Open the product file and select the
			_Overview_
			tab. Press
			the
			_Launch an Eclipse application_
			hyperlink in the
			_Testing_
			section.
		
		
image::training_product40.png" />
				</imageobject>
				<textobject>
					<phrase>Starting the product,pdfwidth=60%]
		

		
			Validate that your application starts. You should see an empty
			window, which can be moved, resized,
			minimized,
			maximized and
			closed.
		
	

