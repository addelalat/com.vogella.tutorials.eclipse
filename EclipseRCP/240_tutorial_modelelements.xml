
	<title>Exercise: Modeling a User Interface
[[tutorial_modelelements1">
=== Desired user interface
		
			In the following exercises you create the basis of the application user interface. At the end of this exercise
			your user
			interface
			should look
			similar to the following screenshot.
		
		
image::tutorial_model50.png" scale="50" />
				</imageobject>
				<textobject>
					<phrase>Screenshot of the application,pdfwidth=60%]
		
	
[[tutorial_modelelements_openeditor">
=== Open the Application.e4xmi file
		
			Open the
			<filename>Application.e4xmi</filename>
			file in
			the
			_Eclipse 4 model editor_
			via a
			double-click or
			right-click on
			it
			and
			select
			menu:Open With[Eclipse 4 model editor]
			.
		
	
[[tutorial_modelelements_perspective">
=== Add a perspective
		
			Add a perspective stack with one perspective
			to your application
			model
			so that you can later easily add more of
			them.
		
		
			Navigate to your
			window inside the
			<filename>Application.e4xmi</filename>
			file. Select the
			_Controls_
			node.
			Add a
			_Perspective Stack_
			via the context menu on the
			_Controls_
			entry as indicated in the following screenshot.
		
		
image::tutorial_model02.png[Adding a PerspectiveStack to the Eclipse RCP application,pdfwidth=60%]
		
		<tip>
			
				Alternatively to the context menu you can also use the
				_Add..._
				button on the detail page to add child elements to the selected
				element.
			
		</tip>

		
			After creating the perspective stack add a
			_Perspective_
			to it, either
			via the context menu or the
			_Add..._
			button.
		
		
image::tutorial_model04.png" scale="35" />
				</imageobject>
				<textobject>
					<phrase>Adding a Perspective,pdfwidth=60%]
		
		
			Enter the
			_To-do_
			value
			in the
			_Label_
			field
			and the
			_com.example.e4.rcp.todo.perspective_
			value
			in the
			_ID_
			field.
		
		
image::tutorial_model10.png[Adding a Perspective to the Eclipse 4 application,pdfwidth=60%]
		
	

[[tutorial_modelelements1a">
=== Add part sash and part stack containers
		
			Select
			_Controls_
			below the newly created perspective
			and add a
			part sash container element.
		
		
image::tutorial_model12.png[Add PartSashContainer,pdfwidth=60%]
		
		

			Change its
			_Orientation_
			attribute to
			_Horizontal_
			and enter into the ID
			field the
			_com.example.e4.rcp.todo.partsashcontainer.main_
			value.
		

		
image::tutorial_model20.png" scale="30" />
				</imageobject>
				<textobject>
					<phrase>Change the orientation attribute,pdfwidth=60%]
		
		
			Add a
			part stack
			as the first child to your part sash container
			element.
		

		
			Re-select the
			parent part sash container
			and add another
			part sash
			container
			element. Now add two
			part stacks
			to the
			second part sash
			container.
		
		After these changes your application model should look similar
			to
			the
			following screenshot.
		
		
image::tutorial_model30.png" scale="60" />
				</imageobject>
				<textobject>
					<phrase>Application model structure,pdfwidth=60%]
		

	

[[tutorial_modelelements1b">
=== Create the parts
		
			Add a
			part
			model element
			to each part stack. As ID for the parts
			use the
			prefix
			<code>com.example.e4.rcp.todo.part</code>
			and the suffix from the following table. Also put the label from the
			table into the appropriate field of the part
			editor.
		
		
			<table frame='all'>
		=== Label and ID from the Parts
				<tgroup cols='2' align='left' colsep='1' rowsep='1'>
					<colspec colname='c1' colwidth="1*" />
					<colspec colname='c2' colwidth="2*" />
					<thead>
						<row>
							<entry>ID Suffix</entry>
							<entry>Label</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>.todooverview</entry>
							<entry>Overview</entry>
						</row>
						<row>
							<entry>.tododetails</entry>
							<entry>Details</entry>
						</row>
						<row>
							<entry>.playground</entry>
							<entry>Playground</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
		
		
			The final structure of your application model should
			be similar
			to the
			following
			screenshot. The screenshot also
			shows the detailed data of the overview part inside the detail pane of the application model editor.
		
		
image::tutorial_model40.png" scale="30" />
				</imageobject>
				<textobject>
					<phrase>Part data,pdfwidth=60%]
		

	
[[tutorial_modelelement_validate">
=== Validate the user interface
		
			Start your product and validate that the user interface looks as
			planned. Reassign your model elements if
			required. The model
			editor
			supports drag-and
			drop
			for
			reassignment.
		
		Also note that you can already see the
			structure, even though you have not created any Java classes so far.
		
	

