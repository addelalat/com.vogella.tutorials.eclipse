
	<title>Toolbars, ToolControls and drop-down tool items

[[toolbar_advanced_buttons">
=== Adding toolbars to parts
		<indexterm>
			<primary>Toolbar</primary>
			<secondary>View / Part</secondary>
		</indexterm>

		
			Toolbars in the application
			model are defined within
			the
			_Trimbars_
			model element. A trimbar can be defined for
			_TrimmedWindow_
			model elements. Via its
			<parameter>Side</parameter>
			attribute you define if the trimbar
			should
			be
			placed on the top, left,
			right or bottom corner of the
			resulting window.
		

		
			To add a toolbar to a
			view,
			set the
			<parameter>Toolbar</parameter>
			flag on the model element for the part and create the entries in the
			application model.
		
		
			Such an example setup is displayed in the following screenshot.
		
		
image::part_toolbar10.png" />
				</imageobject>
				<textobject>
					<phrase>Adding a toolbar to a part,pdfwidth=60%]
		
	
[[toolbar_advanced_toolcontrols">
=== ToolControls
		<indexterm>
			<primary>ToolControl</primary>
		</indexterm>
		
			_ToolControl_
			model element points to a Java class which can create controls that
			are displayed in the toolbar.

		
		
			For example, the following code creates a
			<code>Text</code>
			field in the toolbar which looks like a search field.
		
		
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/toolitem/SearchToolItem.java" />
			</programlisting>
		
		
			You can add such a
			<code>ToolControl</code>
			,
			for example, to your windows trimbar as depicted in the following
			screenshot.
		
		
			<mediaobject>
				<!-- TODO: screenshot shows an old class name com.vogella.e4.rcp.todo.SearchToolItem -->
				<imageobject>
					<imagedata fileref="images/toolitem_search04.png" scale="30" />
				</imageobject>
				<textobject>
					<phrase>Adding a ToolItems to the Window Trim,pdfwidth=60%]
		
		
			The following screenshot shows this
			<code>ToolControl</code>
			used in an example RCP application.
		

		
image::toolitem_search10.png" />
				</imageobject>
				<textobject>
					<phrase>Resulting application with a search Toolitem,pdfwidth=60%]
		
	

[[toolbar_advanced_menues">
=== Drop-down tool items
		<indexterm>
			<primary>Toolbar</primary>
			<secondary>Drop-down</secondary>
		</indexterm>
		
			Set the
			<parameter>Menu</parameter>
			attribute on an toolitem
			to be able to define a menu
			similar to the
			_Run As..._
			button in the Eclipse IDE. This button is depicted in the following
			screenshot.
		
		
image::toolitem_dropdown10.png" scale="40" />
				</imageobject>
				<textobject>
					<phrase>Drop-down menu for a toolitem,pdfwidth=60%]
		

	

