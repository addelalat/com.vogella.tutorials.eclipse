<section id="addinghelp">
	<title>Example</title>
	<section id="addinghelp_total">
		<title>Project with help</title>
		<para> The following will demonstrate how to create the help in a
			separated plug-in which contains all help related content.
		</para>
		<para> Create a new Eclipse RCP project
			"de.vogella.rcp.help.application"
			with the template "RCP application
			with a view". Create another plug-in (not RCP application)
			"de.vogella.rcp.help.content" with the template "Plug-in with sample
			help content". Select the following options.
		</para>

		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/selection10.gif" />

				</imageobject>
			</mediaobject>
		</para>

		<para>
			Add the following plugins as dependency to your
			"de.vogella.rcp.help.content" plugin.


			<itemizedlist>
				<listitem>
					<para>org.eclipse.help.ui      </para>
				</listitem>
				<listitem>
					<para>org.eclipse.help.webapp    </para>
				</listitem>
				<listitem>
					<para>org.eclipse.equinox.http.jetty     </para>
				</listitem>
			</itemizedlist>

		</para>
		<para>
			Add the command to "org.eclipse.ui.help.displayHelp" to the main
			menu
			in "de.vogella.rcp.help.content". Optionally you can also assign
			the key "F1" via the
			extension point "org.eclipse.ui.bindings" to the
			command.
		</para>

		<para>Create a launch configuration which includes
			"de.vogella.rcp.help.application" and "de.vogella.rcp.help.content"
			and all dependencies
			and run your application. You should be able to
			open the help content via the menu.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/help10.png" />

				</imageobject>
			</mediaobject>
		</para>

		<para>To understand the structure of the help file check your
			plugin.xml and you see that the extension point
			"org.eclipse.help.toc"
			is used to point to toc*.xml files which
			describes
			the help content.
		</para>
	</section>
	<section id="addinghelp_more">
		<title>Adding search and context sensitive help</title>
		<para> You can also add a search dialog and context sensitive help to
			your application. To do this you add the commands
			"org.eclipse.ui.help.helpSearch" and
			"org.eclipse.ui.help.dynamicHelp" to your application. Unfortunately
			you have to activate these in the "ApplicationActionBarAdvisor" class
			via the following coding.
		</para>

		<para>
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/ApplicationActionBarAdvisor.java" />
			</programlisting>
		</para>
		<para> Now you can call the help search and the context sensitive
			help. To define the targets for the context sensitive search create a
			file "context.xml" in your help plug-in with the following content.
		</para>

		<para>
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/context.adoc[]
			</programlisting>
		</para>
		<para> You then have to define an extension
			"org.eclipse.help.contexts" which points to the file "context.xml".
		</para>
		<para>
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/plugin.adoc[]
			</programlisting>
		</para>
		<para> After this you can assign the help to individual controls. For
			example you can assign the help to your table control.
		</para>
		<para>
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/assign.txt" />
			</programlisting>
		</para>

	</section>
</section>