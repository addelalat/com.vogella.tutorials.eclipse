
== Zest and JFace Example

=== Create Project
		
			Create a new RCP application "de.vogella.zest.jface".
			Use the "
			RCP application with a view" as a template. Add the zest
			dependencies
			to your MANIFEST.MF. Change the Perspective.java to the
			following (we
			do not want a
			stand-alone view).
			
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/jface/Perspective.java[]
----
		
	


=== Model
		 Create the following model. Please note that the model can be
			anything as long as you can
			logically convert it into a connected Graph. 

		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/jface/MyNode.java[]
----
		

		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/jface/MyConnection.java[]
----
		

		 Also build this class which provides an instance of the data
			model. 
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/jface/NodeModelContentProvider.java[]
----
		

	

=== Providers
		Create the following content and label providers. 

		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/jface/ZestNodeContentProvider.java[]
----
		
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/jface/ZestLabelProvider.java[]
----
		
	

=== View

		 Change the view to the following.
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/jface/View.java[]
----
		
		 The result should look like the following.
		

		
image::ZestFinal10.gif" />
					
				</imageobject>
			</mediaobject>
		
	

=== Filter

		 You can define a filter on the viewer via setFilters();
		
		 For example define the following filter.
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/jface/NodeFilter.java[]
----
		
		 Apply the filter to the view to filter all elements.
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/jface/ViewFilter.java[]
----
		
		
			<tip> You can also define a filter on the layout so that certain
				elements are ignore then calculating the layout. Method
				isObjectFiltered(LayoutItem item). Use item.getGraphData() to get
				the underlying object
				(GraphNode or GraphConnection).
			</tip>
		

	


