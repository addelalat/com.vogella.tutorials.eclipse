== Using the OSGi console

=== The OSGi console
		

		
			The OSGi console is
			like a command-line shell.
			In this console you
			can
			type a command to perform
			an OSGi
			action.
			This
			can be useful to
			analyze problems on the OSGi layer of your
			application.
		
		
			Use, for example, the command
			`ss`
			to get an overview of all
			bundles, their status and bundle-id.
			The
			following table is a
			reference of the most important
			OSGi commands.

.Table Title
|===

		=== OSGi commands
				<tgroup cols='2' align='left' colsep='1' rowsep='1'>
					<colspec colname='c1' colwidth="1*" />
					<colspec colname='c2' colwidth="2*" />
					
						
|Command
|Description
						
					
					
						
|help
|Lists the available commands.
						
						
|ss
|Lists the installed bundles and
								their
								status.
							
						
						
|
								ss
								_vogella_
							
|
								Lists bundles and their status
								that have
								_vogella_
								within
								their name.
							
						
						
|
								start
								_<![CDATA[<bundle-id>]]>_
							
|
								Starts the bundle with the
								_<![CDATA[<bundle-id>]]>_
								ID.
							
						
						
|
								stop
								_<![CDATA[<bundle-id>]]>_
							
|
								Stops the bundle with the
								_<![CDATA[<bundle-id>]]>_
								ID.
							
						
						
|
								diag
								_<![CDATA[<bundle-id>]]>_
							
|Diagnoses a particular bundle. It lists all missing
								dependencies.
							
						
						
|
								install
								_URL_
							
|Installs a bundle from a URL.
						
						
|
								uninstall
								_<![CDATA[<bundle-id>]]>_
							
|
								Uninstalls the bundle with the
								_<![CDATA[<bundle-id>]]>_
								ID.
							
						
						
|
								bundle
								_<![CDATA[<bundle-id>]]>_
							
|
								Shows information about the bundle with the
								_<![CDATA[<bundle-id>]]>_
								ID,
								including the
								registered
								and used services.
							
						
						
|
								headers
								_<![CDATA[<bundle-id>]]>_
							
|
								Shows the MANIFST.MF information for a bundle.
							
						
						
|
								services
								_filter_
							
|
								Shows all available services and their consumer. Filter is
								an optional LDAP filter, e.g., to see all
								services which provide
								a
								ManagedService implementation use the "services
								(objectclass=*ManagedService)" command.
							
						
					
				
			|===
		
	

=== Required bundles
		
			You have to add the
			following
			bundles to your runtime configuration to
			use the OSGi
			console.
			<itemizedlist>
				*
					org.eclipse.equinox.console
				
				*
					org.apache.felix.gogo.command
				
				*
					org.apache.felix.gogo.runtime
				
				*
					org.apache.felix.gogo.shell
				
			
		

	


=== Telnet
		
			If you specify the
			_-console_
			parameter in your launch configuration Eclipse will allow you to
			interact with the OSGi console. An OSGi launch
			configuration created
			with the Eclipse IDE contains
			this
			parameter by default. Via the following parameter
			you can open a
			port to which you can connect via the telnet protocol.
		
		
			_-console 5555_
		
		
			If you open a
			telnet session to
			the OSGi console, you can use tab
			completion and a
			history of the
			commands similar to the
			_Bash_
			shell under Linux.
		
	

=== Access to the Eclipse OSGi console
		
			You can also access the OSGi console of your running Eclipse
			IDE. In
			the
			_Console_
			_
				View
			_
			you find a menu entry with the
			tooltip
			_Open Console_
			.
			If you select
			_Host OSGi Console_
			,
			you will have access
			to
			your running OSGi instance.
		
		
			Please note that interfering with your running Eclipse IDE via
			the OSGi console, may put the Eclipse IDE into a
			bad state.
		
	

