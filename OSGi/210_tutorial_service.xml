
== Exercise: Create service bundle
	<section>
=== Target of the exercise
		 In this exercise you create a plug-in for a service
			implementation which provides access to the data.
		
		This service implementation uses transient data storage, i.e.,
			the
			data is not persisted between
			application
			restarts. To persist
			the
			data you could extend this class
			to store the data for example in
			a
			database or
			the file system.
			As this
			storage is
			not
			special for
			Eclipse
			RCP
			applications, it is not covered
			in
			this
			$book.
		
	

=== Create a data model provider plug-in (service plug-in)
		
			Create a new simple plug-in (see
			<xref linkend="simpleplugin" />
			) project called
			_com.example.e4.rcp.todo.services_
			.
			This plug-in is called
			_todo service_
			plug-in in the following description.
		
		<tip>
			
				The MacOS operating system treads folders ending with
				_.service_
				special, therefore we use the
				_.services_
				ending.
			
		</tip>
	

=== Define the dependencies in the service plug-in
		
			Add the
			`com.example.e4.rcp.todo.model`
			plug-in as dependency to your service plug-in. To achieve this
			open
			the
			_MANIFEST.MF_
			file and select the
			_Dependencies_
			tab and add the
			`com.example.e4.rcp.todo.model`
			package
			to the
			_Imported Packages_
			.
		
	


=== Provide an implementation of the ITodoService interface
		
			Create the
			`com.example.e4.rcp.todo.services.internal`
			package in your service plug-in and create the following class.
		
		
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/server/MyTodoServiceImpl.java[]
----
		
	


=== Update the product configuration (via your feature)

		
			Add
			your new
			`*.model`
			and
			`*.services`
			plug-ins to
			your
			`com.example.e4.rcp.todo.feature`
			feature. Ensure that you use the
			_Plug-ins_
			tab on the
			_feature.xml_
			file.
		
		<warning>
			
				Every time you create a new plug-in and refer to it in your
				_MANIFEST.MF_
				file
				you have to add it to your product configuration file (via
				your
				feature project).
			
		</warning>
	


