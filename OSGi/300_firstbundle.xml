== Tutorial: Using the Activator and exporting your bundle
	
		In this exercise you create another bundle which uses an
		`Activator`
		. You also run it within Eclipse
		At the
		end of this chapter you will
		also export
		your bundle
		to use it
		later in a
		stand-alone OSGi server.
	

=== Create a new Bundle
		
			Create a new simple plug-in project
			"com.vogella.osgi.firstbundle.internal" via
			menu:File[New > Other... > Plug-in Development > Plug-in Project]
			.
		
	

=== Coding
		 Create the following thread class.
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/firstbundle/MyThread.java[]
----
		
		 Change the class Activator.java to the following.
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/firstbundle/Activator.java[]
----
		
	

=== Run
		
			Select your
			_MANIFEST.MF_
			file, right-click it and select
			menu:Run As[Run
					Configuration
				]
			. Create an OSGi Framework launch configuration. deselect
			all bundles
			except your de.vogella.osgi.firstbundle. Afterwards press the
			_Add
				Required
				bundles
			_
			.
			This adds the
			`org.eclipse.osgi`
			bundle to your run configuration.
		
		
image::firstbundle30.gif[]

				
			
		
		 Run this configuration. Every 5 second a new
			message is
			written
			to the console.
		
		
image::firstbundle40.gif[]

				
			
		
		
			TIP:
				In case you are wondering in which folder OSGi starts you find it
				in
				<![CDATA[ 
				${workspace_loc}/.metadata/plugins/org.eclipse.pde.core/
				<runconfig> ]]>.
				This folder list the installed bundles via the file "dev.properties"
				and set the Eclipse workspace as reference in the config.ini file
				via the osgi.bundles=reference\:file\ statement. This way you can
				update your bundles in the running OSGi environment directly without
				any deployment.
			
		
	

=== Export your bundle
		Export your bundle. This will allow you to install it into a
			OSGi runtime. Select your bundle and choose File -> Export -> Plug-in
			Development -> "Deployable plug-ins and fragment".
		
		
image::firstbundle50.gif[]

				
			
		
		
image::firstbundle60.gif[]

				
			
		
		 Unflag the option to export the source.
		
image::firstbundle65.gif[]

				
			
		
	
